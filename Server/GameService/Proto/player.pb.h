// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.proto

#ifndef PROTOBUF_INCLUDED_player_2eproto
#define PROTOBUF_INCLUDED_player_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto 

namespace protobuf_player_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[30];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_player_2eproto
namespace TCCamp {
class AccountCreateReq;
class AccountCreateReqDefaultTypeInternal;
extern AccountCreateReqDefaultTypeInternal _AccountCreateReq_default_instance_;
class AccountCreateRsp;
class AccountCreateRspDefaultTypeInternal;
extern AccountCreateRspDefaultTypeInternal _AccountCreateRsp_default_instance_;
class AccountLoginReq;
class AccountLoginReqDefaultTypeInternal;
extern AccountLoginReqDefaultTypeInternal _AccountLoginReq_default_instance_;
class AccountLoginRsp;
class AccountLoginRspDefaultTypeInternal;
extern AccountLoginRspDefaultTypeInternal _AccountLoginRsp_default_instance_;
class ClientPingReq;
class ClientPingReqDefaultTypeInternal;
extern ClientPingReqDefaultTypeInternal _ClientPingReq_default_instance_;
class CubeTransformInfo;
class CubeTransformInfoDefaultTypeInternal;
extern CubeTransformInfoDefaultTypeInternal _CubeTransformInfo_default_instance_;
class EnterSceneReq;
class EnterSceneReqDefaultTypeInternal;
extern EnterSceneReqDefaultTypeInternal _EnterSceneReq_default_instance_;
class EnterSceneRsp;
class EnterSceneRspDefaultTypeInternal;
extern EnterSceneRspDefaultTypeInternal _EnterSceneRsp_default_instance_;
class ExitSceneAnnounce;
class ExitSceneAnnounceDefaultTypeInternal;
extern ExitSceneAnnounceDefaultTypeInternal _ExitSceneAnnounce_default_instance_;
class GetRoleDataReq;
class GetRoleDataReqDefaultTypeInternal;
extern GetRoleDataReqDefaultTypeInternal _GetRoleDataReq_default_instance_;
class GetRoleDataRsp;
class GetRoleDataRspDefaultTypeInternal;
extern GetRoleDataRspDefaultTypeInternal _GetRoleDataRsp_default_instance_;
class GetRoleListRsp;
class GetRoleListRspDefaultTypeInternal;
extern GetRoleListRspDefaultTypeInternal _GetRoleListRsp_default_instance_;
class PBBagItem;
class PBBagItemDefaultTypeInternal;
extern PBBagItemDefaultTypeInternal _PBBagItem_default_instance_;
class PBPosition;
class PBPositionDefaultTypeInternal;
extern PBPositionDefaultTypeInternal _PBPosition_default_instance_;
class PBRoleData;
class PBRoleDataDefaultTypeInternal;
extern PBRoleDataDefaultTypeInternal _PBRoleData_default_instance_;
class PBRoleMoveSyncData;
class PBRoleMoveSyncDataDefaultTypeInternal;
extern PBRoleMoveSyncDataDefaultTypeInternal _PBRoleMoveSyncData_default_instance_;
class PBRoleStatus;
class PBRoleStatusDefaultTypeInternal;
extern PBRoleStatusDefaultTypeInternal _PBRoleStatus_default_instance_;
class PBRotation;
class PBRotationDefaultTypeInternal;
extern PBRotationDefaultTypeInternal _PBRotation_default_instance_;
class PBScale;
class PBScaleDefaultTypeInternal;
extern PBScaleDefaultTypeInternal _PBScale_default_instance_;
class PBShopItem;
class PBShopItemDefaultTypeInternal;
extern PBShopItemDefaultTypeInternal _PBShopItem_default_instance_;
class RoleBuyItemReq;
class RoleBuyItemReqDefaultTypeInternal;
extern RoleBuyItemReqDefaultTypeInternal _RoleBuyItemReq_default_instance_;
class RoleBuyItemRsp;
class RoleBuyItemRspDefaultTypeInternal;
extern RoleBuyItemRspDefaultTypeInternal _RoleBuyItemRsp_default_instance_;
class RoleCreateRsp;
class RoleCreateRspDefaultTypeInternal;
extern RoleCreateRspDefaultTypeInternal _RoleCreateRsp_default_instance_;
class RoleMoveSyncReq;
class RoleMoveSyncReqDefaultTypeInternal;
extern RoleMoveSyncReqDefaultTypeInternal _RoleMoveSyncReq_default_instance_;
class RoleMoveSyncRsp;
class RoleMoveSyncRspDefaultTypeInternal;
extern RoleMoveSyncRspDefaultTypeInternal _RoleMoveSyncRsp_default_instance_;
class SceneSyncAnnounce;
class SceneSyncAnnounceDefaultTypeInternal;
extern SceneSyncAnnounceDefaultTypeInternal _SceneSyncAnnounce_default_instance_;
class ServerPongRsp;
class ServerPongRspDefaultTypeInternal;
extern ServerPongRspDefaultTypeInternal _ServerPongRsp_default_instance_;
class UpdateBagListRsp;
class UpdateBagListRspDefaultTypeInternal;
extern UpdateBagListRspDefaultTypeInternal _UpdateBagListRsp_default_instance_;
class UpdateMoneyRsp;
class UpdateMoneyRspDefaultTypeInternal;
extern UpdateMoneyRspDefaultTypeInternal _UpdateMoneyRsp_default_instance_;
class UpdateShopListRsp;
class UpdateShopListRspDefaultTypeInternal;
extern UpdateShopListRspDefaultTypeInternal _UpdateShopListRsp_default_instance_;
}  // namespace TCCamp
namespace google {
namespace protobuf {
template<> ::TCCamp::AccountCreateReq* Arena::CreateMaybeMessage<::TCCamp::AccountCreateReq>(Arena*);
template<> ::TCCamp::AccountCreateRsp* Arena::CreateMaybeMessage<::TCCamp::AccountCreateRsp>(Arena*);
template<> ::TCCamp::AccountLoginReq* Arena::CreateMaybeMessage<::TCCamp::AccountLoginReq>(Arena*);
template<> ::TCCamp::AccountLoginRsp* Arena::CreateMaybeMessage<::TCCamp::AccountLoginRsp>(Arena*);
template<> ::TCCamp::ClientPingReq* Arena::CreateMaybeMessage<::TCCamp::ClientPingReq>(Arena*);
template<> ::TCCamp::CubeTransformInfo* Arena::CreateMaybeMessage<::TCCamp::CubeTransformInfo>(Arena*);
template<> ::TCCamp::EnterSceneReq* Arena::CreateMaybeMessage<::TCCamp::EnterSceneReq>(Arena*);
template<> ::TCCamp::EnterSceneRsp* Arena::CreateMaybeMessage<::TCCamp::EnterSceneRsp>(Arena*);
template<> ::TCCamp::ExitSceneAnnounce* Arena::CreateMaybeMessage<::TCCamp::ExitSceneAnnounce>(Arena*);
template<> ::TCCamp::GetRoleDataReq* Arena::CreateMaybeMessage<::TCCamp::GetRoleDataReq>(Arena*);
template<> ::TCCamp::GetRoleDataRsp* Arena::CreateMaybeMessage<::TCCamp::GetRoleDataRsp>(Arena*);
template<> ::TCCamp::GetRoleListRsp* Arena::CreateMaybeMessage<::TCCamp::GetRoleListRsp>(Arena*);
template<> ::TCCamp::PBBagItem* Arena::CreateMaybeMessage<::TCCamp::PBBagItem>(Arena*);
template<> ::TCCamp::PBPosition* Arena::CreateMaybeMessage<::TCCamp::PBPosition>(Arena*);
template<> ::TCCamp::PBRoleData* Arena::CreateMaybeMessage<::TCCamp::PBRoleData>(Arena*);
template<> ::TCCamp::PBRoleMoveSyncData* Arena::CreateMaybeMessage<::TCCamp::PBRoleMoveSyncData>(Arena*);
template<> ::TCCamp::PBRoleStatus* Arena::CreateMaybeMessage<::TCCamp::PBRoleStatus>(Arena*);
template<> ::TCCamp::PBRotation* Arena::CreateMaybeMessage<::TCCamp::PBRotation>(Arena*);
template<> ::TCCamp::PBScale* Arena::CreateMaybeMessage<::TCCamp::PBScale>(Arena*);
template<> ::TCCamp::PBShopItem* Arena::CreateMaybeMessage<::TCCamp::PBShopItem>(Arena*);
template<> ::TCCamp::RoleBuyItemReq* Arena::CreateMaybeMessage<::TCCamp::RoleBuyItemReq>(Arena*);
template<> ::TCCamp::RoleBuyItemRsp* Arena::CreateMaybeMessage<::TCCamp::RoleBuyItemRsp>(Arena*);
template<> ::TCCamp::RoleCreateRsp* Arena::CreateMaybeMessage<::TCCamp::RoleCreateRsp>(Arena*);
template<> ::TCCamp::RoleMoveSyncReq* Arena::CreateMaybeMessage<::TCCamp::RoleMoveSyncReq>(Arena*);
template<> ::TCCamp::RoleMoveSyncRsp* Arena::CreateMaybeMessage<::TCCamp::RoleMoveSyncRsp>(Arena*);
template<> ::TCCamp::SceneSyncAnnounce* Arena::CreateMaybeMessage<::TCCamp::SceneSyncAnnounce>(Arena*);
template<> ::TCCamp::ServerPongRsp* Arena::CreateMaybeMessage<::TCCamp::ServerPongRsp>(Arena*);
template<> ::TCCamp::UpdateBagListRsp* Arena::CreateMaybeMessage<::TCCamp::UpdateBagListRsp>(Arena*);
template<> ::TCCamp::UpdateMoneyRsp* Arena::CreateMaybeMessage<::TCCamp::UpdateMoneyRsp>(Arena*);
template<> ::TCCamp::UpdateShopListRsp* Arena::CreateMaybeMessage<::TCCamp::UpdateShopListRsp>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace TCCamp {

enum CLIENT_CMD {
  CLIENT_CMD_INVALID = 0,
  CLIENT_PING = 30001,
  CLIENT_LOGIN_REQ = 30101,
  CLIENT_CREATE_REQ = 30102,
  CLIENT_CREATE_ROLE_REQ = 30201,
  CLIENT_GET_ROLELIST_REQ = 30202,
  CLIENT_GET_ROLEDATA_REQ = 30203,
  CLIENT_UPDATE_MONEY_REQ = 30301,
  CLIENT_UPDATE_BAGLIST_REQ = 30302,
  CLIENT_UPDATE_SHOPLIST_REQ = 30303,
  CLIENT_ROLE_BUY_ITEM_REQ = 30401,
  CLIENT_ROLE_MOVE_SYNC_REQ = 30501,
  CLIENT_ENTER_SCENE_REQ = 30502,
  CLIENT_EXIT_SCENE_REQ = 30503,
  CLIENT_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CLIENT_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CLIENT_CMD_IsValid(int value);
const CLIENT_CMD CLIENT_CMD_MIN = CLIENT_CMD_INVALID;
const CLIENT_CMD CLIENT_CMD_MAX = CLIENT_EXIT_SCENE_REQ;
const int CLIENT_CMD_ARRAYSIZE = CLIENT_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* CLIENT_CMD_descriptor();
inline const ::std::string& CLIENT_CMD_Name(CLIENT_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    CLIENT_CMD_descriptor(), value);
}
inline bool CLIENT_CMD_Parse(
    const ::std::string& name, CLIENT_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CLIENT_CMD>(
    CLIENT_CMD_descriptor(), name, value);
}
enum SERVER_CMD {
  SERVER_CMD_INVALID = 0,
  SERVER_PONG = 10001,
  SERVER_LOGIN_RSP = 10101,
  SERVER_CREATE_RSP = 10102,
  SERVER_CREATE_ROLE_RSP = 10201,
  SERVER_GET_ROLELIST_RSP = 10202,
  SERVER_GET_ROLEDATA_RSP = 10203,
  SERVER_UPDATE_MONEY_RSP = 10301,
  SERVER_UPDATE_BAGLIST_RSP = 10302,
  SERVER_UPDATE_SHOPLIST_RSP = 10303,
  SERVER_ROLE_BUY_ITEM_RSP = 10401,
  SERVER_ROLE_MOVE_SYNC_RSP = 10501,
  SERVER_ENTER_SCENE_RSP = 10502,
  SERVER_EXIT_SCENE_RSP = 10503,
  SERVER_ROLE_MOVE_SYNC_ANNOUNCE = 11000,
  SERVER_ROLE_EXIT_SCENE_ANNOUNCE = 11001,
  SERVER_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SERVER_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SERVER_CMD_IsValid(int value);
const SERVER_CMD SERVER_CMD_MIN = SERVER_CMD_INVALID;
const SERVER_CMD SERVER_CMD_MAX = SERVER_ROLE_EXIT_SCENE_ANNOUNCE;
const int SERVER_CMD_ARRAYSIZE = SERVER_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* SERVER_CMD_descriptor();
inline const ::std::string& SERVER_CMD_Name(SERVER_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    SERVER_CMD_descriptor(), value);
}
inline bool SERVER_CMD_Parse(
    const ::std::string& name, SERVER_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SERVER_CMD>(
    SERVER_CMD_descriptor(), name, value);
}
enum PB_RESULT_CODE {
  SUCCESS = 0,
  LOGIN_PASSWORD_ERROR = 200,
  LOGIN_ACCOUNT_NOT_EXIST = 201,
  LOGIN_ACCOUNT_ONLINE = 202,
  CREATE_ACCOUNT_EXIST = 300,
  CREATE_ROLE_COUNT_MAX = 400,
  GET_ROLEDATA_ROLE_NOT_EXIST = 401,
  MONEY_UPDATA_ERROR = 500,
  SHOP_UPDATA_ERROR = 600,
  SHOP_BUY_ITEM_NOT_EXIST = 601,
  SHOP_BUY_ITEM_GLOBAL_SHORTAGE = 602,
  SHOP_BUY_ITEM_PERSONAL_SHORTAGE = 603,
  SHOP_BUY_MONEY_SHORTAGE = 604,
  SHOP_BUY_TIME_INVALID = 605,
  BAG_UPDATA_ERROR = 700,
  SYNC_POS_STATUS_INVALID = 800,
  SERVER_ERROR = 40000,
  PB_RESULT_CODE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_RESULT_CODE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_RESULT_CODE_IsValid(int value);
const PB_RESULT_CODE PB_RESULT_CODE_MIN = SUCCESS;
const PB_RESULT_CODE PB_RESULT_CODE_MAX = SERVER_ERROR;
const int PB_RESULT_CODE_ARRAYSIZE = PB_RESULT_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_RESULT_CODE_descriptor();
inline const ::std::string& PB_RESULT_CODE_Name(PB_RESULT_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_RESULT_CODE_descriptor(), value);
}
inline bool PB_RESULT_CODE_Parse(
    const ::std::string& name, PB_RESULT_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_RESULT_CODE>(
    PB_RESULT_CODE_descriptor(), name, value);
}
// ===================================================================

class ClientPingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.ClientPingReq) */ {
 public:
  ClientPingReq();
  virtual ~ClientPingReq();

  ClientPingReq(const ClientPingReq& from);

  inline ClientPingReq& operator=(const ClientPingReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientPingReq(ClientPingReq&& from) noexcept
    : ClientPingReq() {
    *this = ::std::move(from);
  }

  inline ClientPingReq& operator=(ClientPingReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientPingReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientPingReq* internal_default_instance() {
    return reinterpret_cast<const ClientPingReq*>(
               &_ClientPingReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ClientPingReq* other);
  friend void swap(ClientPingReq& a, ClientPingReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientPingReq* New() const final {
    return CreateMaybeMessage<ClientPingReq>(NULL);
  }

  ClientPingReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClientPingReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClientPingReq& from);
  void MergeFrom(const ClientPingReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientPingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 Timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:TCCamp.ClientPingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerPongRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.ServerPongRsp) */ {
 public:
  ServerPongRsp();
  virtual ~ServerPongRsp();

  ServerPongRsp(const ServerPongRsp& from);

  inline ServerPongRsp& operator=(const ServerPongRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerPongRsp(ServerPongRsp&& from) noexcept
    : ServerPongRsp() {
    *this = ::std::move(from);
  }

  inline ServerPongRsp& operator=(ServerPongRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerPongRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerPongRsp* internal_default_instance() {
    return reinterpret_cast<const ServerPongRsp*>(
               &_ServerPongRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ServerPongRsp* other);
  friend void swap(ServerPongRsp& a, ServerPongRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerPongRsp* New() const final {
    return CreateMaybeMessage<ServerPongRsp>(NULL);
  }

  ServerPongRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerPongRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerPongRsp& from);
  void MergeFrom(const ServerPongRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerPongRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 Timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // @@protoc_insertion_point(class_scope:TCCamp.ServerPongRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 timestamp_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.AccountLoginReq) */ {
 public:
  AccountLoginReq();
  virtual ~AccountLoginReq();

  AccountLoginReq(const AccountLoginReq& from);

  inline AccountLoginReq& operator=(const AccountLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountLoginReq(AccountLoginReq&& from) noexcept
    : AccountLoginReq() {
    *this = ::std::move(from);
  }

  inline AccountLoginReq& operator=(AccountLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountLoginReq* internal_default_instance() {
    return reinterpret_cast<const AccountLoginReq*>(
               &_AccountLoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AccountLoginReq* other);
  friend void swap(AccountLoginReq& a, AccountLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountLoginReq* New() const final {
    return CreateMaybeMessage<AccountLoginReq>(NULL);
  }

  AccountLoginReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountLoginReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountLoginReq& from);
  void MergeFrom(const AccountLoginReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  const ::std::string& accountid() const;
  void set_accountid(const ::std::string& value);
  #if LANG_CXX11
  void set_accountid(::std::string&& value);
  #endif
  void set_accountid(const char* value);
  void set_accountid(const char* value, size_t size);
  ::std::string* mutable_accountid();
  ::std::string* release_accountid();
  void set_allocated_accountid(::std::string* accountid);

  // string Password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:TCCamp.AccountLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountid_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountLoginRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.AccountLoginRsp) */ {
 public:
  AccountLoginRsp();
  virtual ~AccountLoginRsp();

  AccountLoginRsp(const AccountLoginRsp& from);

  inline AccountLoginRsp& operator=(const AccountLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountLoginRsp(AccountLoginRsp&& from) noexcept
    : AccountLoginRsp() {
    *this = ::std::move(from);
  }

  inline AccountLoginRsp& operator=(AccountLoginRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountLoginRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountLoginRsp* internal_default_instance() {
    return reinterpret_cast<const AccountLoginRsp*>(
               &_AccountLoginRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AccountLoginRsp* other);
  friend void swap(AccountLoginRsp& a, AccountLoginRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountLoginRsp* New() const final {
    return CreateMaybeMessage<AccountLoginRsp>(NULL);
  }

  AccountLoginRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountLoginRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountLoginRsp& from);
  void MergeFrom(const AccountLoginRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountLoginRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // @@protoc_insertion_point(class_scope:TCCamp.AccountLoginRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountCreateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.AccountCreateReq) */ {
 public:
  AccountCreateReq();
  virtual ~AccountCreateReq();

  AccountCreateReq(const AccountCreateReq& from);

  inline AccountCreateReq& operator=(const AccountCreateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountCreateReq(AccountCreateReq&& from) noexcept
    : AccountCreateReq() {
    *this = ::std::move(from);
  }

  inline AccountCreateReq& operator=(AccountCreateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountCreateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountCreateReq* internal_default_instance() {
    return reinterpret_cast<const AccountCreateReq*>(
               &_AccountCreateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AccountCreateReq* other);
  friend void swap(AccountCreateReq& a, AccountCreateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountCreateReq* New() const final {
    return CreateMaybeMessage<AccountCreateReq>(NULL);
  }

  AccountCreateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountCreateReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountCreateReq& from);
  void MergeFrom(const AccountCreateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountCreateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string accountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  const ::std::string& accountid() const;
  void set_accountid(const ::std::string& value);
  #if LANG_CXX11
  void set_accountid(::std::string&& value);
  #endif
  void set_accountid(const char* value);
  void set_accountid(const char* value, size_t size);
  ::std::string* mutable_accountid();
  ::std::string* release_accountid();
  void set_allocated_accountid(::std::string* accountid);

  // string Password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:TCCamp.AccountCreateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountid_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccountCreateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.AccountCreateRsp) */ {
 public:
  AccountCreateRsp();
  virtual ~AccountCreateRsp();

  AccountCreateRsp(const AccountCreateRsp& from);

  inline AccountCreateRsp& operator=(const AccountCreateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountCreateRsp(AccountCreateRsp&& from) noexcept
    : AccountCreateRsp() {
    *this = ::std::move(from);
  }

  inline AccountCreateRsp& operator=(AccountCreateRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountCreateRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountCreateRsp* internal_default_instance() {
    return reinterpret_cast<const AccountCreateRsp*>(
               &_AccountCreateRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AccountCreateRsp* other);
  friend void swap(AccountCreateRsp& a, AccountCreateRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountCreateRsp* New() const final {
    return CreateMaybeMessage<AccountCreateRsp>(NULL);
  }

  AccountCreateRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AccountCreateRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AccountCreateRsp& from);
  void MergeFrom(const AccountCreateRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountCreateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // @@protoc_insertion_point(class_scope:TCCamp.AccountCreateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.PBPosition) */ {
 public:
  PBPosition();
  virtual ~PBPosition();

  PBPosition(const PBPosition& from);

  inline PBPosition& operator=(const PBPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBPosition(PBPosition&& from) noexcept
    : PBPosition() {
    *this = ::std::move(from);
  }

  inline PBPosition& operator=(PBPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBPosition* internal_default_instance() {
    return reinterpret_cast<const PBPosition*>(
               &_PBPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(PBPosition* other);
  friend void swap(PBPosition& a, PBPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBPosition* New() const final {
    return CreateMaybeMessage<PBPosition>(NULL);
  }

  PBPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBPosition& from);
  void MergeFrom(const PBPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double X = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double Y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:TCCamp.PBPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBRotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.PBRotation) */ {
 public:
  PBRotation();
  virtual ~PBRotation();

  PBRotation(const PBRotation& from);

  inline PBRotation& operator=(const PBRotation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRotation(PBRotation&& from) noexcept
    : PBRotation() {
    *this = ::std::move(from);
  }

  inline PBRotation& operator=(PBRotation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRotation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRotation* internal_default_instance() {
    return reinterpret_cast<const PBRotation*>(
               &_PBRotation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PBRotation* other);
  friend void swap(PBRotation& a, PBRotation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRotation* New() const final {
    return CreateMaybeMessage<PBRotation>(NULL);
  }

  PBRotation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRotation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRotation& from);
  void MergeFrom(const PBRotation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRotation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double X = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double Y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:TCCamp.PBRotation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBRoleStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.PBRoleStatus) */ {
 public:
  PBRoleStatus();
  virtual ~PBRoleStatus();

  PBRoleStatus(const PBRoleStatus& from);

  inline PBRoleStatus& operator=(const PBRoleStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRoleStatus(PBRoleStatus&& from) noexcept
    : PBRoleStatus() {
    *this = ::std::move(from);
  }

  inline PBRoleStatus& operator=(PBRoleStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRoleStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRoleStatus* internal_default_instance() {
    return reinterpret_cast<const PBRoleStatus*>(
               &_PBRoleStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(PBRoleStatus* other);
  friend void swap(PBRoleStatus& a, PBRoleStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRoleStatus* New() const final {
    return CreateMaybeMessage<PBRoleStatus>(NULL);
  }

  PBRoleStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRoleStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRoleStatus& from);
  void MergeFrom(const PBRoleStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRoleStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PBRotation Rot = 1;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 1;
  private:
  const ::TCCamp::PBRotation& _internal_rot() const;
  public:
  const ::TCCamp::PBRotation& rot() const;
  ::TCCamp::PBRotation* release_rot();
  ::TCCamp::PBRotation* mutable_rot();
  void set_allocated_rot(::TCCamp::PBRotation* rot);

  // .TCCamp.PBPosition Pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  private:
  const ::TCCamp::PBPosition& _internal_pos() const;
  public:
  const ::TCCamp::PBPosition& pos() const;
  ::TCCamp::PBPosition* release_pos();
  ::TCCamp::PBPosition* mutable_pos();
  void set_allocated_pos(::TCCamp::PBPosition* pos);

  // int32 Speed = 2;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TCCamp.PBRoleStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TCCamp::PBRotation* rot_;
  ::TCCamp::PBPosition* pos_;
  ::google::protobuf::int32 speed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBBagItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.PBBagItem) */ {
 public:
  PBBagItem();
  virtual ~PBBagItem();

  PBBagItem(const PBBagItem& from);

  inline PBBagItem& operator=(const PBBagItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBBagItem(PBBagItem&& from) noexcept
    : PBBagItem() {
    *this = ::std::move(from);
  }

  inline PBBagItem& operator=(PBBagItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBagItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBBagItem* internal_default_instance() {
    return reinterpret_cast<const PBBagItem*>(
               &_PBBagItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(PBBagItem* other);
  friend void swap(PBBagItem& a, PBBagItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBBagItem* New() const final {
    return CreateMaybeMessage<PBBagItem>(NULL);
  }

  PBBagItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBBagItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBBagItem& from);
  void MergeFrom(const PBBagItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBBagItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 Id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 Num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TCCamp.PBBagItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBRoleData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.PBRoleData) */ {
 public:
  PBRoleData();
  virtual ~PBRoleData();

  PBRoleData(const PBRoleData& from);

  inline PBRoleData& operator=(const PBRoleData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRoleData(PBRoleData&& from) noexcept
    : PBRoleData() {
    *this = ::std::move(from);
  }

  inline PBRoleData& operator=(PBRoleData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRoleData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRoleData* internal_default_instance() {
    return reinterpret_cast<const PBRoleData*>(
               &_PBRoleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(PBRoleData* other);
  friend void swap(PBRoleData& a, PBRoleData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRoleData* New() const final {
    return CreateMaybeMessage<PBRoleData>(NULL);
  }

  PBRoleData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRoleData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRoleData& from);
  void MergeFrom(const PBRoleData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRoleData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TCCamp.PBBagItem Items = 5;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 5;
  ::TCCamp::PBBagItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::TCCamp::PBBagItem >*
      mutable_items();
  const ::TCCamp::PBBagItem& items(int index) const;
  ::TCCamp::PBBagItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::TCCamp::PBBagItem >&
      items() const;

  // .TCCamp.PBRoleStatus Status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  private:
  const ::TCCamp::PBRoleStatus& _internal_status() const;
  public:
  const ::TCCamp::PBRoleStatus& status() const;
  ::TCCamp::PBRoleStatus* release_status();
  ::TCCamp::PBRoleStatus* mutable_status();
  void set_allocated_status(::TCCamp::PBRoleStatus* status);

  // int32 RoleID = 1;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // int32 SceneId = 2;
  void clear_sceneid();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::int32 sceneid() const;
  void set_sceneid(::google::protobuf::int32 value);

  // int32 Money = 3;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TCCamp.PBRoleData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TCCamp::PBBagItem > items_;
  ::TCCamp::PBRoleStatus* status_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 sceneid_;
  ::google::protobuf::int32 money_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleCreateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.RoleCreateRsp) */ {
 public:
  RoleCreateRsp();
  virtual ~RoleCreateRsp();

  RoleCreateRsp(const RoleCreateRsp& from);

  inline RoleCreateRsp& operator=(const RoleCreateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleCreateRsp(RoleCreateRsp&& from) noexcept
    : RoleCreateRsp() {
    *this = ::std::move(from);
  }

  inline RoleCreateRsp& operator=(RoleCreateRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleCreateRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleCreateRsp* internal_default_instance() {
    return reinterpret_cast<const RoleCreateRsp*>(
               &_RoleCreateRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(RoleCreateRsp* other);
  friend void swap(RoleCreateRsp& a, RoleCreateRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleCreateRsp* New() const final {
    return CreateMaybeMessage<RoleCreateRsp>(NULL);
  }

  RoleCreateRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoleCreateRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoleCreateRsp& from);
  void MergeFrom(const RoleCreateRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleCreateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // @@protoc_insertion_point(class_scope:TCCamp.RoleCreateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRoleListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.GetRoleListRsp) */ {
 public:
  GetRoleListRsp();
  virtual ~GetRoleListRsp();

  GetRoleListRsp(const GetRoleListRsp& from);

  inline GetRoleListRsp& operator=(const GetRoleListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRoleListRsp(GetRoleListRsp&& from) noexcept
    : GetRoleListRsp() {
    *this = ::std::move(from);
  }

  inline GetRoleListRsp& operator=(GetRoleListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoleListRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRoleListRsp* internal_default_instance() {
    return reinterpret_cast<const GetRoleListRsp*>(
               &_GetRoleListRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(GetRoleListRsp* other);
  friend void swap(GetRoleListRsp& a, GetRoleListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRoleListRsp* New() const final {
    return CreateMaybeMessage<GetRoleListRsp>(NULL);
  }

  GetRoleListRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRoleListRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRoleListRsp& from);
  void MergeFrom(const GetRoleListRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRoleListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 RoleIDs = 2;
  int roleids_size() const;
  void clear_roleids();
  static const int kRoleIDsFieldNumber = 2;
  ::google::protobuf::int32 roleids(int index) const;
  void set_roleids(int index, ::google::protobuf::int32 value);
  void add_roleids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roleids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roleids();

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // @@protoc_insertion_point(class_scope:TCCamp.GetRoleListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roleids_;
  mutable int _roleids_cached_byte_size_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRoleDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.GetRoleDataReq) */ {
 public:
  GetRoleDataReq();
  virtual ~GetRoleDataReq();

  GetRoleDataReq(const GetRoleDataReq& from);

  inline GetRoleDataReq& operator=(const GetRoleDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRoleDataReq(GetRoleDataReq&& from) noexcept
    : GetRoleDataReq() {
    *this = ::std::move(from);
  }

  inline GetRoleDataReq& operator=(GetRoleDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoleDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRoleDataReq* internal_default_instance() {
    return reinterpret_cast<const GetRoleDataReq*>(
               &_GetRoleDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(GetRoleDataReq* other);
  friend void swap(GetRoleDataReq& a, GetRoleDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRoleDataReq* New() const final {
    return CreateMaybeMessage<GetRoleDataReq>(NULL);
  }

  GetRoleDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRoleDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRoleDataReq& from);
  void MergeFrom(const GetRoleDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRoleDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 RoleID = 1;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TCCamp.GetRoleDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 roleid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRoleDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.GetRoleDataRsp) */ {
 public:
  GetRoleDataRsp();
  virtual ~GetRoleDataRsp();

  GetRoleDataRsp(const GetRoleDataRsp& from);

  inline GetRoleDataRsp& operator=(const GetRoleDataRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRoleDataRsp(GetRoleDataRsp&& from) noexcept
    : GetRoleDataRsp() {
    *this = ::std::move(from);
  }

  inline GetRoleDataRsp& operator=(GetRoleDataRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoleDataRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRoleDataRsp* internal_default_instance() {
    return reinterpret_cast<const GetRoleDataRsp*>(
               &_GetRoleDataRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(GetRoleDataRsp* other);
  friend void swap(GetRoleDataRsp& a, GetRoleDataRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRoleDataRsp* New() const final {
    return CreateMaybeMessage<GetRoleDataRsp>(NULL);
  }

  GetRoleDataRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRoleDataRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRoleDataRsp& from);
  void MergeFrom(const GetRoleDataRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRoleDataRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PBRoleData Data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  private:
  const ::TCCamp::PBRoleData& _internal_data() const;
  public:
  const ::TCCamp::PBRoleData& data() const;
  ::TCCamp::PBRoleData* release_data();
  ::TCCamp::PBRoleData* mutable_data();
  void set_allocated_data(::TCCamp::PBRoleData* data);

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // @@protoc_insertion_point(class_scope:TCCamp.GetRoleDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TCCamp::PBRoleData* data_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateMoneyRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.UpdateMoneyRsp) */ {
 public:
  UpdateMoneyRsp();
  virtual ~UpdateMoneyRsp();

  UpdateMoneyRsp(const UpdateMoneyRsp& from);

  inline UpdateMoneyRsp& operator=(const UpdateMoneyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateMoneyRsp(UpdateMoneyRsp&& from) noexcept
    : UpdateMoneyRsp() {
    *this = ::std::move(from);
  }

  inline UpdateMoneyRsp& operator=(UpdateMoneyRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateMoneyRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateMoneyRsp* internal_default_instance() {
    return reinterpret_cast<const UpdateMoneyRsp*>(
               &_UpdateMoneyRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(UpdateMoneyRsp* other);
  friend void swap(UpdateMoneyRsp& a, UpdateMoneyRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateMoneyRsp* New() const final {
    return CreateMaybeMessage<UpdateMoneyRsp>(NULL);
  }

  UpdateMoneyRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateMoneyRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateMoneyRsp& from);
  void MergeFrom(const UpdateMoneyRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateMoneyRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // int32 Money = 2;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TCCamp.UpdateMoneyRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_;
  ::google::protobuf::int32 money_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateBagListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.UpdateBagListRsp) */ {
 public:
  UpdateBagListRsp();
  virtual ~UpdateBagListRsp();

  UpdateBagListRsp(const UpdateBagListRsp& from);

  inline UpdateBagListRsp& operator=(const UpdateBagListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateBagListRsp(UpdateBagListRsp&& from) noexcept
    : UpdateBagListRsp() {
    *this = ::std::move(from);
  }

  inline UpdateBagListRsp& operator=(UpdateBagListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateBagListRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateBagListRsp* internal_default_instance() {
    return reinterpret_cast<const UpdateBagListRsp*>(
               &_UpdateBagListRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(UpdateBagListRsp* other);
  friend void swap(UpdateBagListRsp& a, UpdateBagListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateBagListRsp* New() const final {
    return CreateMaybeMessage<UpdateBagListRsp>(NULL);
  }

  UpdateBagListRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateBagListRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateBagListRsp& from);
  void MergeFrom(const UpdateBagListRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateBagListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TCCamp.PBBagItem Items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  ::TCCamp::PBBagItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::TCCamp::PBBagItem >*
      mutable_items();
  const ::TCCamp::PBBagItem& items(int index) const;
  ::TCCamp::PBBagItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::TCCamp::PBBagItem >&
      items() const;

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // @@protoc_insertion_point(class_scope:TCCamp.UpdateBagListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TCCamp::PBBagItem > items_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBShopItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.PBShopItem) */ {
 public:
  PBShopItem();
  virtual ~PBShopItem();

  PBShopItem(const PBShopItem& from);

  inline PBShopItem& operator=(const PBShopItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBShopItem(PBShopItem&& from) noexcept
    : PBShopItem() {
    *this = ::std::move(from);
  }

  inline PBShopItem& operator=(PBShopItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBShopItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBShopItem* internal_default_instance() {
    return reinterpret_cast<const PBShopItem*>(
               &_PBShopItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(PBShopItem* other);
  friend void swap(PBShopItem& a, PBShopItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBShopItem* New() const final {
    return CreateMaybeMessage<PBShopItem>(NULL);
  }

  PBShopItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBShopItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBShopItem& from);
  void MergeFrom(const PBShopItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBShopItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 Id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 Price = 2;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // sint32 PersonalLimitMaxCount = 3;
  void clear_personallimitmaxcount();
  static const int kPersonalLimitMaxCountFieldNumber = 3;
  ::google::protobuf::int32 personallimitmaxcount() const;
  void set_personallimitmaxcount(::google::protobuf::int32 value);

  // sint32 PersonalLimitCount = 4;
  void clear_personallimitcount();
  static const int kPersonalLimitCountFieldNumber = 4;
  ::google::protobuf::int32 personallimitcount() const;
  void set_personallimitcount(::google::protobuf::int32 value);

  // sint32 GlobalLimitMaxCount = 5;
  void clear_globallimitmaxcount();
  static const int kGlobalLimitMaxCountFieldNumber = 5;
  ::google::protobuf::int32 globallimitmaxcount() const;
  void set_globallimitmaxcount(::google::protobuf::int32 value);

  // sint32 GlobalLimitCount = 6;
  void clear_globallimitcount();
  static const int kGlobalLimitCountFieldNumber = 6;
  ::google::protobuf::int32 globallimitcount() const;
  void set_globallimitcount(::google::protobuf::int32 value);

  // sint64 StartTime = 7;
  void clear_starttime();
  static const int kStartTimeFieldNumber = 7;
  ::google::protobuf::int64 starttime() const;
  void set_starttime(::google::protobuf::int64 value);

  // sint64 EndTime = 8;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 8;
  ::google::protobuf::int64 endtime() const;
  void set_endtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:TCCamp.PBShopItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 personallimitmaxcount_;
  ::google::protobuf::int32 personallimitcount_;
  ::google::protobuf::int32 globallimitmaxcount_;
  ::google::protobuf::int32 globallimitcount_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int64 endtime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateShopListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.UpdateShopListRsp) */ {
 public:
  UpdateShopListRsp();
  virtual ~UpdateShopListRsp();

  UpdateShopListRsp(const UpdateShopListRsp& from);

  inline UpdateShopListRsp& operator=(const UpdateShopListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateShopListRsp(UpdateShopListRsp&& from) noexcept
    : UpdateShopListRsp() {
    *this = ::std::move(from);
  }

  inline UpdateShopListRsp& operator=(UpdateShopListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateShopListRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateShopListRsp* internal_default_instance() {
    return reinterpret_cast<const UpdateShopListRsp*>(
               &_UpdateShopListRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(UpdateShopListRsp* other);
  friend void swap(UpdateShopListRsp& a, UpdateShopListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateShopListRsp* New() const final {
    return CreateMaybeMessage<UpdateShopListRsp>(NULL);
  }

  UpdateShopListRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateShopListRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateShopListRsp& from);
  void MergeFrom(const UpdateShopListRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateShopListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TCCamp.PBShopItem Items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  ::TCCamp::PBShopItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::TCCamp::PBShopItem >*
      mutable_items();
  const ::TCCamp::PBShopItem& items(int index) const;
  ::TCCamp::PBShopItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::TCCamp::PBShopItem >&
      items() const;

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // @@protoc_insertion_point(class_scope:TCCamp.UpdateShopListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TCCamp::PBShopItem > items_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleBuyItemReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.RoleBuyItemReq) */ {
 public:
  RoleBuyItemReq();
  virtual ~RoleBuyItemReq();

  RoleBuyItemReq(const RoleBuyItemReq& from);

  inline RoleBuyItemReq& operator=(const RoleBuyItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleBuyItemReq(RoleBuyItemReq&& from) noexcept
    : RoleBuyItemReq() {
    *this = ::std::move(from);
  }

  inline RoleBuyItemReq& operator=(RoleBuyItemReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleBuyItemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleBuyItemReq* internal_default_instance() {
    return reinterpret_cast<const RoleBuyItemReq*>(
               &_RoleBuyItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(RoleBuyItemReq* other);
  friend void swap(RoleBuyItemReq& a, RoleBuyItemReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleBuyItemReq* New() const final {
    return CreateMaybeMessage<RoleBuyItemReq>(NULL);
  }

  RoleBuyItemReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoleBuyItemReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoleBuyItemReq& from);
  void MergeFrom(const RoleBuyItemReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleBuyItemReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 ItemID = 1;
  void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // int32 ItemCount = 2;
  void clear_itemcount();
  static const int kItemCountFieldNumber = 2;
  ::google::protobuf::int32 itemcount() const;
  void set_itemcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TCCamp.RoleBuyItemReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemcount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleBuyItemRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.RoleBuyItemRsp) */ {
 public:
  RoleBuyItemRsp();
  virtual ~RoleBuyItemRsp();

  RoleBuyItemRsp(const RoleBuyItemRsp& from);

  inline RoleBuyItemRsp& operator=(const RoleBuyItemRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleBuyItemRsp(RoleBuyItemRsp&& from) noexcept
    : RoleBuyItemRsp() {
    *this = ::std::move(from);
  }

  inline RoleBuyItemRsp& operator=(RoleBuyItemRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleBuyItemRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleBuyItemRsp* internal_default_instance() {
    return reinterpret_cast<const RoleBuyItemRsp*>(
               &_RoleBuyItemRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(RoleBuyItemRsp* other);
  friend void swap(RoleBuyItemRsp& a, RoleBuyItemRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleBuyItemRsp* New() const final {
    return CreateMaybeMessage<RoleBuyItemRsp>(NULL);
  }

  RoleBuyItemRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoleBuyItemRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoleBuyItemRsp& from);
  void MergeFrom(const RoleBuyItemRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleBuyItemRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // @@protoc_insertion_point(class_scope:TCCamp.RoleBuyItemRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBRoleMoveSyncData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.PBRoleMoveSyncData) */ {
 public:
  PBRoleMoveSyncData();
  virtual ~PBRoleMoveSyncData();

  PBRoleMoveSyncData(const PBRoleMoveSyncData& from);

  inline PBRoleMoveSyncData& operator=(const PBRoleMoveSyncData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRoleMoveSyncData(PBRoleMoveSyncData&& from) noexcept
    : PBRoleMoveSyncData() {
    *this = ::std::move(from);
  }

  inline PBRoleMoveSyncData& operator=(PBRoleMoveSyncData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRoleMoveSyncData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRoleMoveSyncData* internal_default_instance() {
    return reinterpret_cast<const PBRoleMoveSyncData*>(
               &_PBRoleMoveSyncData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(PBRoleMoveSyncData* other);
  friend void swap(PBRoleMoveSyncData& a, PBRoleMoveSyncData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRoleMoveSyncData* New() const final {
    return CreateMaybeMessage<PBRoleMoveSyncData>(NULL);
  }

  PBRoleMoveSyncData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRoleMoveSyncData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRoleMoveSyncData& from);
  void MergeFrom(const PBRoleMoveSyncData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRoleMoveSyncData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PBRoleStatus status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  private:
  const ::TCCamp::PBRoleStatus& _internal_status() const;
  public:
  const ::TCCamp::PBRoleStatus& status() const;
  ::TCCamp::PBRoleStatus* release_status();
  ::TCCamp::PBRoleStatus* mutable_status();
  void set_allocated_status(::TCCamp::PBRoleStatus* status);

  // int32 RoleID = 1;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TCCamp.PBRoleMoveSyncData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TCCamp::PBRoleStatus* status_;
  ::google::protobuf::int32 roleid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleMoveSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.RoleMoveSyncReq) */ {
 public:
  RoleMoveSyncReq();
  virtual ~RoleMoveSyncReq();

  RoleMoveSyncReq(const RoleMoveSyncReq& from);

  inline RoleMoveSyncReq& operator=(const RoleMoveSyncReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleMoveSyncReq(RoleMoveSyncReq&& from) noexcept
    : RoleMoveSyncReq() {
    *this = ::std::move(from);
  }

  inline RoleMoveSyncReq& operator=(RoleMoveSyncReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleMoveSyncReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleMoveSyncReq* internal_default_instance() {
    return reinterpret_cast<const RoleMoveSyncReq*>(
               &_RoleMoveSyncReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(RoleMoveSyncReq* other);
  friend void swap(RoleMoveSyncReq& a, RoleMoveSyncReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleMoveSyncReq* New() const final {
    return CreateMaybeMessage<RoleMoveSyncReq>(NULL);
  }

  RoleMoveSyncReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoleMoveSyncReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoleMoveSyncReq& from);
  void MergeFrom(const RoleMoveSyncReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleMoveSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PBRoleMoveSyncData status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  private:
  const ::TCCamp::PBRoleMoveSyncData& _internal_status() const;
  public:
  const ::TCCamp::PBRoleMoveSyncData& status() const;
  ::TCCamp::PBRoleMoveSyncData* release_status();
  ::TCCamp::PBRoleMoveSyncData* mutable_status();
  void set_allocated_status(::TCCamp::PBRoleMoveSyncData* status);

  // @@protoc_insertion_point(class_scope:TCCamp.RoleMoveSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TCCamp::PBRoleMoveSyncData* status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleMoveSyncRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.RoleMoveSyncRsp) */ {
 public:
  RoleMoveSyncRsp();
  virtual ~RoleMoveSyncRsp();

  RoleMoveSyncRsp(const RoleMoveSyncRsp& from);

  inline RoleMoveSyncRsp& operator=(const RoleMoveSyncRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleMoveSyncRsp(RoleMoveSyncRsp&& from) noexcept
    : RoleMoveSyncRsp() {
    *this = ::std::move(from);
  }

  inline RoleMoveSyncRsp& operator=(RoleMoveSyncRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleMoveSyncRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleMoveSyncRsp* internal_default_instance() {
    return reinterpret_cast<const RoleMoveSyncRsp*>(
               &_RoleMoveSyncRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(RoleMoveSyncRsp* other);
  friend void swap(RoleMoveSyncRsp& a, RoleMoveSyncRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleMoveSyncRsp* New() const final {
    return CreateMaybeMessage<RoleMoveSyncRsp>(NULL);
  }

  RoleMoveSyncRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoleMoveSyncRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoleMoveSyncRsp& from);
  void MergeFrom(const RoleMoveSyncRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleMoveSyncRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // @@protoc_insertion_point(class_scope:TCCamp.RoleMoveSyncRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBScale : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.PBScale) */ {
 public:
  PBScale();
  virtual ~PBScale();

  PBScale(const PBScale& from);

  inline PBScale& operator=(const PBScale& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBScale(PBScale&& from) noexcept
    : PBScale() {
    *this = ::std::move(from);
  }

  inline PBScale& operator=(PBScale&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBScale& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBScale* internal_default_instance() {
    return reinterpret_cast<const PBScale*>(
               &_PBScale_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(PBScale* other);
  friend void swap(PBScale& a, PBScale& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBScale* New() const final {
    return CreateMaybeMessage<PBScale>(NULL);
  }

  PBScale* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBScale>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBScale& from);
  void MergeFrom(const PBScale& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBScale* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double X = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double Y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:TCCamp.PBScale)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CubeTransformInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.CubeTransformInfo) */ {
 public:
  CubeTransformInfo();
  virtual ~CubeTransformInfo();

  CubeTransformInfo(const CubeTransformInfo& from);

  inline CubeTransformInfo& operator=(const CubeTransformInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CubeTransformInfo(CubeTransformInfo&& from) noexcept
    : CubeTransformInfo() {
    *this = ::std::move(from);
  }

  inline CubeTransformInfo& operator=(CubeTransformInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CubeTransformInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CubeTransformInfo* internal_default_instance() {
    return reinterpret_cast<const CubeTransformInfo*>(
               &_CubeTransformInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(CubeTransformInfo* other);
  friend void swap(CubeTransformInfo& a, CubeTransformInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CubeTransformInfo* New() const final {
    return CreateMaybeMessage<CubeTransformInfo>(NULL);
  }

  CubeTransformInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CubeTransformInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CubeTransformInfo& from);
  void MergeFrom(const CubeTransformInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CubeTransformInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PBPosition Pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  private:
  const ::TCCamp::PBPosition& _internal_pos() const;
  public:
  const ::TCCamp::PBPosition& pos() const;
  ::TCCamp::PBPosition* release_pos();
  ::TCCamp::PBPosition* mutable_pos();
  void set_allocated_pos(::TCCamp::PBPosition* pos);

  // .TCCamp.PBRotation Rot = 3;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 3;
  private:
  const ::TCCamp::PBRotation& _internal_rot() const;
  public:
  const ::TCCamp::PBRotation& rot() const;
  ::TCCamp::PBRotation* release_rot();
  ::TCCamp::PBRotation* mutable_rot();
  void set_allocated_rot(::TCCamp::PBRotation* rot);

  // .TCCamp.PBScale Scale = 4;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 4;
  private:
  const ::TCCamp::PBScale& _internal_scale() const;
  public:
  const ::TCCamp::PBScale& scale() const;
  ::TCCamp::PBScale* release_scale();
  ::TCCamp::PBScale* mutable_scale();
  void set_allocated_scale(::TCCamp::PBScale* scale);

  // int32 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TCCamp.CubeTransformInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TCCamp::PBPosition* pos_;
  ::TCCamp::PBRotation* rot_;
  ::TCCamp::PBScale* scale_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.EnterSceneReq) */ {
 public:
  EnterSceneReq();
  virtual ~EnterSceneReq();

  EnterSceneReq(const EnterSceneReq& from);

  inline EnterSceneReq& operator=(const EnterSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneReq(EnterSceneReq&& from) noexcept
    : EnterSceneReq() {
    *this = ::std::move(from);
  }

  inline EnterSceneReq& operator=(EnterSceneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnterSceneReq* internal_default_instance() {
    return reinterpret_cast<const EnterSceneReq*>(
               &_EnterSceneReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(EnterSceneReq* other);
  friend void swap(EnterSceneReq& a, EnterSceneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneReq* New() const final {
    return CreateMaybeMessage<EnterSceneReq>(NULL);
  }

  EnterSceneReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EnterSceneReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EnterSceneReq& from);
  void MergeFrom(const EnterSceneReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnterSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 SceneID = 1;
  void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  ::google::protobuf::int32 sceneid() const;
  void set_sceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TCCamp.EnterSceneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 sceneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.EnterSceneRsp) */ {
 public:
  EnterSceneRsp();
  virtual ~EnterSceneRsp();

  EnterSceneRsp(const EnterSceneRsp& from);

  inline EnterSceneRsp& operator=(const EnterSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneRsp(EnterSceneRsp&& from) noexcept
    : EnterSceneRsp() {
    *this = ::std::move(from);
  }

  inline EnterSceneRsp& operator=(EnterSceneRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnterSceneRsp* internal_default_instance() {
    return reinterpret_cast<const EnterSceneRsp*>(
               &_EnterSceneRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(EnterSceneRsp* other);
  friend void swap(EnterSceneRsp& a, EnterSceneRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneRsp* New() const final {
    return CreateMaybeMessage<EnterSceneRsp>(NULL);
  }

  EnterSceneRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EnterSceneRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EnterSceneRsp& from);
  void MergeFrom(const EnterSceneRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnterSceneRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TCCamp.PB_RESULT_CODE Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TCCamp::PB_RESULT_CODE result() const;
  void set_result(::TCCamp::PB_RESULT_CODE value);

  // @@protoc_insertion_point(class_scope:TCCamp.EnterSceneRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExitSceneAnnounce : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.ExitSceneAnnounce) */ {
 public:
  ExitSceneAnnounce();
  virtual ~ExitSceneAnnounce();

  ExitSceneAnnounce(const ExitSceneAnnounce& from);

  inline ExitSceneAnnounce& operator=(const ExitSceneAnnounce& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitSceneAnnounce(ExitSceneAnnounce&& from) noexcept
    : ExitSceneAnnounce() {
    *this = ::std::move(from);
  }

  inline ExitSceneAnnounce& operator=(ExitSceneAnnounce&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitSceneAnnounce& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExitSceneAnnounce* internal_default_instance() {
    return reinterpret_cast<const ExitSceneAnnounce*>(
               &_ExitSceneAnnounce_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(ExitSceneAnnounce* other);
  friend void swap(ExitSceneAnnounce& a, ExitSceneAnnounce& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitSceneAnnounce* New() const final {
    return CreateMaybeMessage<ExitSceneAnnounce>(NULL);
  }

  ExitSceneAnnounce* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExitSceneAnnounce>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExitSceneAnnounce& from);
  void MergeFrom(const ExitSceneAnnounce& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExitSceneAnnounce* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 RoleIds = 1;
  int roleids_size() const;
  void clear_roleids();
  static const int kRoleIdsFieldNumber = 1;
  ::google::protobuf::int32 roleids(int index) const;
  void set_roleids(int index, ::google::protobuf::int32 value);
  void add_roleids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roleids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roleids();

  // repeated int32 CubeIds = 2;
  int cubeids_size() const;
  void clear_cubeids();
  static const int kCubeIdsFieldNumber = 2;
  ::google::protobuf::int32 cubeids(int index) const;
  void set_cubeids(int index, ::google::protobuf::int32 value);
  void add_cubeids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cubeids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cubeids();

  // @@protoc_insertion_point(class_scope:TCCamp.ExitSceneAnnounce)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roleids_;
  mutable int _roleids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cubeids_;
  mutable int _cubeids_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneSyncAnnounce : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TCCamp.SceneSyncAnnounce) */ {
 public:
  SceneSyncAnnounce();
  virtual ~SceneSyncAnnounce();

  SceneSyncAnnounce(const SceneSyncAnnounce& from);

  inline SceneSyncAnnounce& operator=(const SceneSyncAnnounce& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneSyncAnnounce(SceneSyncAnnounce&& from) noexcept
    : SceneSyncAnnounce() {
    *this = ::std::move(from);
  }

  inline SceneSyncAnnounce& operator=(SceneSyncAnnounce&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneSyncAnnounce& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SceneSyncAnnounce* internal_default_instance() {
    return reinterpret_cast<const SceneSyncAnnounce*>(
               &_SceneSyncAnnounce_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(SceneSyncAnnounce* other);
  friend void swap(SceneSyncAnnounce& a, SceneSyncAnnounce& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneSyncAnnounce* New() const final {
    return CreateMaybeMessage<SceneSyncAnnounce>(NULL);
  }

  SceneSyncAnnounce* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SceneSyncAnnounce>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SceneSyncAnnounce& from);
  void MergeFrom(const SceneSyncAnnounce& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SceneSyncAnnounce* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TCCamp.PBRoleMoveSyncData Datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  ::TCCamp::PBRoleMoveSyncData* mutable_datas(int index);
  ::google::protobuf::RepeatedPtrField< ::TCCamp::PBRoleMoveSyncData >*
      mutable_datas();
  const ::TCCamp::PBRoleMoveSyncData& datas(int index) const;
  ::TCCamp::PBRoleMoveSyncData* add_datas();
  const ::google::protobuf::RepeatedPtrField< ::TCCamp::PBRoleMoveSyncData >&
      datas() const;

  // repeated .TCCamp.CubeTransformInfo cubeInfos = 2;
  int cubeinfos_size() const;
  void clear_cubeinfos();
  static const int kCubeInfosFieldNumber = 2;
  ::TCCamp::CubeTransformInfo* mutable_cubeinfos(int index);
  ::google::protobuf::RepeatedPtrField< ::TCCamp::CubeTransformInfo >*
      mutable_cubeinfos();
  const ::TCCamp::CubeTransformInfo& cubeinfos(int index) const;
  ::TCCamp::CubeTransformInfo* add_cubeinfos();
  const ::google::protobuf::RepeatedPtrField< ::TCCamp::CubeTransformInfo >&
      cubeinfos() const;

  // @@protoc_insertion_point(class_scope:TCCamp.SceneSyncAnnounce)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TCCamp::PBRoleMoveSyncData > datas_;
  ::google::protobuf::RepeatedPtrField< ::TCCamp::CubeTransformInfo > cubeinfos_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClientPingReq

// int64 Timestamp = 1;
inline void ClientPingReq::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ClientPingReq::timestamp() const {
  // @@protoc_insertion_point(field_get:TCCamp.ClientPingReq.Timestamp)
  return timestamp_;
}
inline void ClientPingReq::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.ClientPingReq.Timestamp)
}

// -------------------------------------------------------------------

// ServerPongRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void ServerPongRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE ServerPongRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.ServerPongRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void ServerPongRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.ServerPongRsp.Result)
}

// int64 Timestamp = 2;
inline void ServerPongRsp::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ServerPongRsp::timestamp() const {
  // @@protoc_insertion_point(field_get:TCCamp.ServerPongRsp.Timestamp)
  return timestamp_;
}
inline void ServerPongRsp::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.ServerPongRsp.Timestamp)
}

// -------------------------------------------------------------------

// AccountLoginReq

// string AccountID = 1;
inline void AccountLoginReq::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLoginReq::accountid() const {
  // @@protoc_insertion_point(field_get:TCCamp.AccountLoginReq.AccountID)
  return accountid_.GetNoArena();
}
inline void AccountLoginReq::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TCCamp.AccountLoginReq.AccountID)
}
#if LANG_CXX11
inline void AccountLoginReq::set_accountid(::std::string&& value) {
  
  accountid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TCCamp.AccountLoginReq.AccountID)
}
#endif
inline void AccountLoginReq::set_accountid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TCCamp.AccountLoginReq.AccountID)
}
inline void AccountLoginReq::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TCCamp.AccountLoginReq.AccountID)
}
inline ::std::string* AccountLoginReq::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:TCCamp.AccountLoginReq.AccountID)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLoginReq::release_accountid() {
  // @@protoc_insertion_point(field_release:TCCamp.AccountLoginReq.AccountID)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLoginReq::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:TCCamp.AccountLoginReq.AccountID)
}

// string Password = 2;
inline void AccountLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLoginReq::password() const {
  // @@protoc_insertion_point(field_get:TCCamp.AccountLoginReq.Password)
  return password_.GetNoArena();
}
inline void AccountLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TCCamp.AccountLoginReq.Password)
}
#if LANG_CXX11
inline void AccountLoginReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TCCamp.AccountLoginReq.Password)
}
#endif
inline void AccountLoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TCCamp.AccountLoginReq.Password)
}
inline void AccountLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TCCamp.AccountLoginReq.Password)
}
inline ::std::string* AccountLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:TCCamp.AccountLoginReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:TCCamp.AccountLoginReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:TCCamp.AccountLoginReq.Password)
}

// -------------------------------------------------------------------

// AccountLoginRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void AccountLoginRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE AccountLoginRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.AccountLoginRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void AccountLoginRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.AccountLoginRsp.Result)
}

// -------------------------------------------------------------------

// AccountCreateReq

// string accountID = 1;
inline void AccountCreateReq::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountCreateReq::accountid() const {
  // @@protoc_insertion_point(field_get:TCCamp.AccountCreateReq.accountID)
  return accountid_.GetNoArena();
}
inline void AccountCreateReq::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TCCamp.AccountCreateReq.accountID)
}
#if LANG_CXX11
inline void AccountCreateReq::set_accountid(::std::string&& value) {
  
  accountid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TCCamp.AccountCreateReq.accountID)
}
#endif
inline void AccountCreateReq::set_accountid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TCCamp.AccountCreateReq.accountID)
}
inline void AccountCreateReq::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TCCamp.AccountCreateReq.accountID)
}
inline ::std::string* AccountCreateReq::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:TCCamp.AccountCreateReq.accountID)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountCreateReq::release_accountid() {
  // @@protoc_insertion_point(field_release:TCCamp.AccountCreateReq.accountID)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountCreateReq::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:TCCamp.AccountCreateReq.accountID)
}

// string Password = 2;
inline void AccountCreateReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountCreateReq::password() const {
  // @@protoc_insertion_point(field_get:TCCamp.AccountCreateReq.Password)
  return password_.GetNoArena();
}
inline void AccountCreateReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TCCamp.AccountCreateReq.Password)
}
#if LANG_CXX11
inline void AccountCreateReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TCCamp.AccountCreateReq.Password)
}
#endif
inline void AccountCreateReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TCCamp.AccountCreateReq.Password)
}
inline void AccountCreateReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TCCamp.AccountCreateReq.Password)
}
inline ::std::string* AccountCreateReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:TCCamp.AccountCreateReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountCreateReq::release_password() {
  // @@protoc_insertion_point(field_release:TCCamp.AccountCreateReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountCreateReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:TCCamp.AccountCreateReq.Password)
}

// -------------------------------------------------------------------

// AccountCreateRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void AccountCreateRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE AccountCreateRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.AccountCreateRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void AccountCreateRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.AccountCreateRsp.Result)
}

// -------------------------------------------------------------------

// PBPosition

// double X = 1;
inline void PBPosition::clear_x() {
  x_ = 0;
}
inline double PBPosition::x() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBPosition.X)
  return x_;
}
inline void PBPosition::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBPosition.X)
}

// double Y = 2;
inline void PBPosition::clear_y() {
  y_ = 0;
}
inline double PBPosition::y() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBPosition.Y)
  return y_;
}
inline void PBPosition::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBPosition.Y)
}

// -------------------------------------------------------------------

// PBRotation

// double X = 1;
inline void PBRotation::clear_x() {
  x_ = 0;
}
inline double PBRotation::x() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBRotation.X)
  return x_;
}
inline void PBRotation::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBRotation.X)
}

// double Y = 2;
inline void PBRotation::clear_y() {
  y_ = 0;
}
inline double PBRotation::y() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBRotation.Y)
  return y_;
}
inline void PBRotation::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBRotation.Y)
}

// -------------------------------------------------------------------

// PBRoleStatus

// .TCCamp.PBRotation Rot = 1;
inline bool PBRoleStatus::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void PBRoleStatus::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
}
inline const ::TCCamp::PBRotation& PBRoleStatus::_internal_rot() const {
  return *rot_;
}
inline const ::TCCamp::PBRotation& PBRoleStatus::rot() const {
  const ::TCCamp::PBRotation* p = rot_;
  // @@protoc_insertion_point(field_get:TCCamp.PBRoleStatus.Rot)
  return p != NULL ? *p : *reinterpret_cast<const ::TCCamp::PBRotation*>(
      &::TCCamp::_PBRotation_default_instance_);
}
inline ::TCCamp::PBRotation* PBRoleStatus::release_rot() {
  // @@protoc_insertion_point(field_release:TCCamp.PBRoleStatus.Rot)
  
  ::TCCamp::PBRotation* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline ::TCCamp::PBRotation* PBRoleStatus::mutable_rot() {
  
  if (rot_ == NULL) {
    auto* p = CreateMaybeMessage<::TCCamp::PBRotation>(GetArenaNoVirtual());
    rot_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TCCamp.PBRoleStatus.Rot)
  return rot_;
}
inline void PBRoleStatus::set_allocated_rot(::TCCamp::PBRotation* rot) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rot_;
  }
  if (rot) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rot = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rot, submessage_arena);
    }
    
  } else {
    
  }
  rot_ = rot;
  // @@protoc_insertion_point(field_set_allocated:TCCamp.PBRoleStatus.Rot)
}

// int32 Speed = 2;
inline void PBRoleStatus::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 PBRoleStatus::speed() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBRoleStatus.Speed)
  return speed_;
}
inline void PBRoleStatus::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBRoleStatus.Speed)
}

// .TCCamp.PBPosition Pos = 3;
inline bool PBRoleStatus::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void PBRoleStatus::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::TCCamp::PBPosition& PBRoleStatus::_internal_pos() const {
  return *pos_;
}
inline const ::TCCamp::PBPosition& PBRoleStatus::pos() const {
  const ::TCCamp::PBPosition* p = pos_;
  // @@protoc_insertion_point(field_get:TCCamp.PBRoleStatus.Pos)
  return p != NULL ? *p : *reinterpret_cast<const ::TCCamp::PBPosition*>(
      &::TCCamp::_PBPosition_default_instance_);
}
inline ::TCCamp::PBPosition* PBRoleStatus::release_pos() {
  // @@protoc_insertion_point(field_release:TCCamp.PBRoleStatus.Pos)
  
  ::TCCamp::PBPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::TCCamp::PBPosition* PBRoleStatus::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::TCCamp::PBPosition>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TCCamp.PBRoleStatus.Pos)
  return pos_;
}
inline void PBRoleStatus::set_allocated_pos(::TCCamp::PBPosition* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:TCCamp.PBRoleStatus.Pos)
}

// -------------------------------------------------------------------

// PBBagItem

// int32 Id = 1;
inline void PBBagItem::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 PBBagItem::id() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBBagItem.Id)
  return id_;
}
inline void PBBagItem::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBBagItem.Id)
}

// int32 Num = 2;
inline void PBBagItem::clear_num() {
  num_ = 0;
}
inline ::google::protobuf::int32 PBBagItem::num() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBBagItem.Num)
  return num_;
}
inline void PBBagItem::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBBagItem.Num)
}

// -------------------------------------------------------------------

// PBRoleData

// int32 RoleID = 1;
inline void PBRoleData::clear_roleid() {
  roleid_ = 0;
}
inline ::google::protobuf::int32 PBRoleData::roleid() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBRoleData.RoleID)
  return roleid_;
}
inline void PBRoleData::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBRoleData.RoleID)
}

// int32 SceneId = 2;
inline void PBRoleData::clear_sceneid() {
  sceneid_ = 0;
}
inline ::google::protobuf::int32 PBRoleData::sceneid() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBRoleData.SceneId)
  return sceneid_;
}
inline void PBRoleData::set_sceneid(::google::protobuf::int32 value) {
  
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBRoleData.SceneId)
}

// int32 Money = 3;
inline void PBRoleData::clear_money() {
  money_ = 0;
}
inline ::google::protobuf::int32 PBRoleData::money() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBRoleData.Money)
  return money_;
}
inline void PBRoleData::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBRoleData.Money)
}

// .TCCamp.PBRoleStatus Status = 4;
inline bool PBRoleData::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void PBRoleData::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
inline const ::TCCamp::PBRoleStatus& PBRoleData::_internal_status() const {
  return *status_;
}
inline const ::TCCamp::PBRoleStatus& PBRoleData::status() const {
  const ::TCCamp::PBRoleStatus* p = status_;
  // @@protoc_insertion_point(field_get:TCCamp.PBRoleData.Status)
  return p != NULL ? *p : *reinterpret_cast<const ::TCCamp::PBRoleStatus*>(
      &::TCCamp::_PBRoleStatus_default_instance_);
}
inline ::TCCamp::PBRoleStatus* PBRoleData::release_status() {
  // @@protoc_insertion_point(field_release:TCCamp.PBRoleData.Status)
  
  ::TCCamp::PBRoleStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::TCCamp::PBRoleStatus* PBRoleData::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::TCCamp::PBRoleStatus>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TCCamp.PBRoleData.Status)
  return status_;
}
inline void PBRoleData::set_allocated_status(::TCCamp::PBRoleStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:TCCamp.PBRoleData.Status)
}

// repeated .TCCamp.PBBagItem Items = 5;
inline int PBRoleData::items_size() const {
  return items_.size();
}
inline void PBRoleData::clear_items() {
  items_.Clear();
}
inline ::TCCamp::PBBagItem* PBRoleData::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:TCCamp.PBRoleData.Items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TCCamp::PBBagItem >*
PBRoleData::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:TCCamp.PBRoleData.Items)
  return &items_;
}
inline const ::TCCamp::PBBagItem& PBRoleData::items(int index) const {
  // @@protoc_insertion_point(field_get:TCCamp.PBRoleData.Items)
  return items_.Get(index);
}
inline ::TCCamp::PBBagItem* PBRoleData::add_items() {
  // @@protoc_insertion_point(field_add:TCCamp.PBRoleData.Items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TCCamp::PBBagItem >&
PBRoleData::items() const {
  // @@protoc_insertion_point(field_list:TCCamp.PBRoleData.Items)
  return items_;
}

// -------------------------------------------------------------------

// RoleCreateRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void RoleCreateRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE RoleCreateRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.RoleCreateRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void RoleCreateRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.RoleCreateRsp.Result)
}

// -------------------------------------------------------------------

// GetRoleListRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void GetRoleListRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE GetRoleListRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.GetRoleListRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void GetRoleListRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.GetRoleListRsp.Result)
}

// repeated int32 RoleIDs = 2;
inline int GetRoleListRsp::roleids_size() const {
  return roleids_.size();
}
inline void GetRoleListRsp::clear_roleids() {
  roleids_.Clear();
}
inline ::google::protobuf::int32 GetRoleListRsp::roleids(int index) const {
  // @@protoc_insertion_point(field_get:TCCamp.GetRoleListRsp.RoleIDs)
  return roleids_.Get(index);
}
inline void GetRoleListRsp::set_roleids(int index, ::google::protobuf::int32 value) {
  roleids_.Set(index, value);
  // @@protoc_insertion_point(field_set:TCCamp.GetRoleListRsp.RoleIDs)
}
inline void GetRoleListRsp::add_roleids(::google::protobuf::int32 value) {
  roleids_.Add(value);
  // @@protoc_insertion_point(field_add:TCCamp.GetRoleListRsp.RoleIDs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GetRoleListRsp::roleids() const {
  // @@protoc_insertion_point(field_list:TCCamp.GetRoleListRsp.RoleIDs)
  return roleids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GetRoleListRsp::mutable_roleids() {
  // @@protoc_insertion_point(field_mutable_list:TCCamp.GetRoleListRsp.RoleIDs)
  return &roleids_;
}

// -------------------------------------------------------------------

// GetRoleDataReq

// int32 RoleID = 1;
inline void GetRoleDataReq::clear_roleid() {
  roleid_ = 0;
}
inline ::google::protobuf::int32 GetRoleDataReq::roleid() const {
  // @@protoc_insertion_point(field_get:TCCamp.GetRoleDataReq.RoleID)
  return roleid_;
}
inline void GetRoleDataReq::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.GetRoleDataReq.RoleID)
}

// -------------------------------------------------------------------

// GetRoleDataRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void GetRoleDataRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE GetRoleDataRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.GetRoleDataRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void GetRoleDataRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.GetRoleDataRsp.Result)
}

// .TCCamp.PBRoleData Data = 2;
inline bool GetRoleDataRsp::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void GetRoleDataRsp::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
inline const ::TCCamp::PBRoleData& GetRoleDataRsp::_internal_data() const {
  return *data_;
}
inline const ::TCCamp::PBRoleData& GetRoleDataRsp::data() const {
  const ::TCCamp::PBRoleData* p = data_;
  // @@protoc_insertion_point(field_get:TCCamp.GetRoleDataRsp.Data)
  return p != NULL ? *p : *reinterpret_cast<const ::TCCamp::PBRoleData*>(
      &::TCCamp::_PBRoleData_default_instance_);
}
inline ::TCCamp::PBRoleData* GetRoleDataRsp::release_data() {
  // @@protoc_insertion_point(field_release:TCCamp.GetRoleDataRsp.Data)
  
  ::TCCamp::PBRoleData* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::TCCamp::PBRoleData* GetRoleDataRsp::mutable_data() {
  
  if (data_ == NULL) {
    auto* p = CreateMaybeMessage<::TCCamp::PBRoleData>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TCCamp.GetRoleDataRsp.Data)
  return data_;
}
inline void GetRoleDataRsp::set_allocated_data(::TCCamp::PBRoleData* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:TCCamp.GetRoleDataRsp.Data)
}

// -------------------------------------------------------------------

// UpdateMoneyRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void UpdateMoneyRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE UpdateMoneyRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.UpdateMoneyRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void UpdateMoneyRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.UpdateMoneyRsp.Result)
}

// int32 Money = 2;
inline void UpdateMoneyRsp::clear_money() {
  money_ = 0;
}
inline ::google::protobuf::int32 UpdateMoneyRsp::money() const {
  // @@protoc_insertion_point(field_get:TCCamp.UpdateMoneyRsp.Money)
  return money_;
}
inline void UpdateMoneyRsp::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.UpdateMoneyRsp.Money)
}

// -------------------------------------------------------------------

// UpdateBagListRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void UpdateBagListRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE UpdateBagListRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.UpdateBagListRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void UpdateBagListRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.UpdateBagListRsp.Result)
}

// repeated .TCCamp.PBBagItem Items = 2;
inline int UpdateBagListRsp::items_size() const {
  return items_.size();
}
inline void UpdateBagListRsp::clear_items() {
  items_.Clear();
}
inline ::TCCamp::PBBagItem* UpdateBagListRsp::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:TCCamp.UpdateBagListRsp.Items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TCCamp::PBBagItem >*
UpdateBagListRsp::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:TCCamp.UpdateBagListRsp.Items)
  return &items_;
}
inline const ::TCCamp::PBBagItem& UpdateBagListRsp::items(int index) const {
  // @@protoc_insertion_point(field_get:TCCamp.UpdateBagListRsp.Items)
  return items_.Get(index);
}
inline ::TCCamp::PBBagItem* UpdateBagListRsp::add_items() {
  // @@protoc_insertion_point(field_add:TCCamp.UpdateBagListRsp.Items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TCCamp::PBBagItem >&
UpdateBagListRsp::items() const {
  // @@protoc_insertion_point(field_list:TCCamp.UpdateBagListRsp.Items)
  return items_;
}

// -------------------------------------------------------------------

// PBShopItem

// int32 Id = 1;
inline void PBShopItem::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 PBShopItem::id() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBShopItem.Id)
  return id_;
}
inline void PBShopItem::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBShopItem.Id)
}

// int32 Price = 2;
inline void PBShopItem::clear_price() {
  price_ = 0;
}
inline ::google::protobuf::int32 PBShopItem::price() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBShopItem.Price)
  return price_;
}
inline void PBShopItem::set_price(::google::protobuf::int32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBShopItem.Price)
}

// sint32 PersonalLimitMaxCount = 3;
inline void PBShopItem::clear_personallimitmaxcount() {
  personallimitmaxcount_ = 0;
}
inline ::google::protobuf::int32 PBShopItem::personallimitmaxcount() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBShopItem.PersonalLimitMaxCount)
  return personallimitmaxcount_;
}
inline void PBShopItem::set_personallimitmaxcount(::google::protobuf::int32 value) {
  
  personallimitmaxcount_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBShopItem.PersonalLimitMaxCount)
}

// sint32 PersonalLimitCount = 4;
inline void PBShopItem::clear_personallimitcount() {
  personallimitcount_ = 0;
}
inline ::google::protobuf::int32 PBShopItem::personallimitcount() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBShopItem.PersonalLimitCount)
  return personallimitcount_;
}
inline void PBShopItem::set_personallimitcount(::google::protobuf::int32 value) {
  
  personallimitcount_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBShopItem.PersonalLimitCount)
}

// sint32 GlobalLimitMaxCount = 5;
inline void PBShopItem::clear_globallimitmaxcount() {
  globallimitmaxcount_ = 0;
}
inline ::google::protobuf::int32 PBShopItem::globallimitmaxcount() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBShopItem.GlobalLimitMaxCount)
  return globallimitmaxcount_;
}
inline void PBShopItem::set_globallimitmaxcount(::google::protobuf::int32 value) {
  
  globallimitmaxcount_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBShopItem.GlobalLimitMaxCount)
}

// sint32 GlobalLimitCount = 6;
inline void PBShopItem::clear_globallimitcount() {
  globallimitcount_ = 0;
}
inline ::google::protobuf::int32 PBShopItem::globallimitcount() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBShopItem.GlobalLimitCount)
  return globallimitcount_;
}
inline void PBShopItem::set_globallimitcount(::google::protobuf::int32 value) {
  
  globallimitcount_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBShopItem.GlobalLimitCount)
}

// sint64 StartTime = 7;
inline void PBShopItem::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PBShopItem::starttime() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBShopItem.StartTime)
  return starttime_;
}
inline void PBShopItem::set_starttime(::google::protobuf::int64 value) {
  
  starttime_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBShopItem.StartTime)
}

// sint64 EndTime = 8;
inline void PBShopItem::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PBShopItem::endtime() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBShopItem.EndTime)
  return endtime_;
}
inline void PBShopItem::set_endtime(::google::protobuf::int64 value) {
  
  endtime_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBShopItem.EndTime)
}

// -------------------------------------------------------------------

// UpdateShopListRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void UpdateShopListRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE UpdateShopListRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.UpdateShopListRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void UpdateShopListRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.UpdateShopListRsp.Result)
}

// repeated .TCCamp.PBShopItem Items = 2;
inline int UpdateShopListRsp::items_size() const {
  return items_.size();
}
inline void UpdateShopListRsp::clear_items() {
  items_.Clear();
}
inline ::TCCamp::PBShopItem* UpdateShopListRsp::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:TCCamp.UpdateShopListRsp.Items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TCCamp::PBShopItem >*
UpdateShopListRsp::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:TCCamp.UpdateShopListRsp.Items)
  return &items_;
}
inline const ::TCCamp::PBShopItem& UpdateShopListRsp::items(int index) const {
  // @@protoc_insertion_point(field_get:TCCamp.UpdateShopListRsp.Items)
  return items_.Get(index);
}
inline ::TCCamp::PBShopItem* UpdateShopListRsp::add_items() {
  // @@protoc_insertion_point(field_add:TCCamp.UpdateShopListRsp.Items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TCCamp::PBShopItem >&
UpdateShopListRsp::items() const {
  // @@protoc_insertion_point(field_list:TCCamp.UpdateShopListRsp.Items)
  return items_;
}

// -------------------------------------------------------------------

// RoleBuyItemReq

// int32 ItemID = 1;
inline void RoleBuyItemReq::clear_itemid() {
  itemid_ = 0;
}
inline ::google::protobuf::int32 RoleBuyItemReq::itemid() const {
  // @@protoc_insertion_point(field_get:TCCamp.RoleBuyItemReq.ItemID)
  return itemid_;
}
inline void RoleBuyItemReq::set_itemid(::google::protobuf::int32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.RoleBuyItemReq.ItemID)
}

// int32 ItemCount = 2;
inline void RoleBuyItemReq::clear_itemcount() {
  itemcount_ = 0;
}
inline ::google::protobuf::int32 RoleBuyItemReq::itemcount() const {
  // @@protoc_insertion_point(field_get:TCCamp.RoleBuyItemReq.ItemCount)
  return itemcount_;
}
inline void RoleBuyItemReq::set_itemcount(::google::protobuf::int32 value) {
  
  itemcount_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.RoleBuyItemReq.ItemCount)
}

// -------------------------------------------------------------------

// RoleBuyItemRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void RoleBuyItemRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE RoleBuyItemRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.RoleBuyItemRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void RoleBuyItemRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.RoleBuyItemRsp.Result)
}

// -------------------------------------------------------------------

// PBRoleMoveSyncData

// int32 RoleID = 1;
inline void PBRoleMoveSyncData::clear_roleid() {
  roleid_ = 0;
}
inline ::google::protobuf::int32 PBRoleMoveSyncData::roleid() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBRoleMoveSyncData.RoleID)
  return roleid_;
}
inline void PBRoleMoveSyncData::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBRoleMoveSyncData.RoleID)
}

// .TCCamp.PBRoleStatus status = 2;
inline bool PBRoleMoveSyncData::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void PBRoleMoveSyncData::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
inline const ::TCCamp::PBRoleStatus& PBRoleMoveSyncData::_internal_status() const {
  return *status_;
}
inline const ::TCCamp::PBRoleStatus& PBRoleMoveSyncData::status() const {
  const ::TCCamp::PBRoleStatus* p = status_;
  // @@protoc_insertion_point(field_get:TCCamp.PBRoleMoveSyncData.status)
  return p != NULL ? *p : *reinterpret_cast<const ::TCCamp::PBRoleStatus*>(
      &::TCCamp::_PBRoleStatus_default_instance_);
}
inline ::TCCamp::PBRoleStatus* PBRoleMoveSyncData::release_status() {
  // @@protoc_insertion_point(field_release:TCCamp.PBRoleMoveSyncData.status)
  
  ::TCCamp::PBRoleStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::TCCamp::PBRoleStatus* PBRoleMoveSyncData::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::TCCamp::PBRoleStatus>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TCCamp.PBRoleMoveSyncData.status)
  return status_;
}
inline void PBRoleMoveSyncData::set_allocated_status(::TCCamp::PBRoleStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:TCCamp.PBRoleMoveSyncData.status)
}

// -------------------------------------------------------------------

// RoleMoveSyncReq

// .TCCamp.PBRoleMoveSyncData status = 1;
inline bool RoleMoveSyncReq::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void RoleMoveSyncReq::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
inline const ::TCCamp::PBRoleMoveSyncData& RoleMoveSyncReq::_internal_status() const {
  return *status_;
}
inline const ::TCCamp::PBRoleMoveSyncData& RoleMoveSyncReq::status() const {
  const ::TCCamp::PBRoleMoveSyncData* p = status_;
  // @@protoc_insertion_point(field_get:TCCamp.RoleMoveSyncReq.status)
  return p != NULL ? *p : *reinterpret_cast<const ::TCCamp::PBRoleMoveSyncData*>(
      &::TCCamp::_PBRoleMoveSyncData_default_instance_);
}
inline ::TCCamp::PBRoleMoveSyncData* RoleMoveSyncReq::release_status() {
  // @@protoc_insertion_point(field_release:TCCamp.RoleMoveSyncReq.status)
  
  ::TCCamp::PBRoleMoveSyncData* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::TCCamp::PBRoleMoveSyncData* RoleMoveSyncReq::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::TCCamp::PBRoleMoveSyncData>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TCCamp.RoleMoveSyncReq.status)
  return status_;
}
inline void RoleMoveSyncReq::set_allocated_status(::TCCamp::PBRoleMoveSyncData* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:TCCamp.RoleMoveSyncReq.status)
}

// -------------------------------------------------------------------

// RoleMoveSyncRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void RoleMoveSyncRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE RoleMoveSyncRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.RoleMoveSyncRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void RoleMoveSyncRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.RoleMoveSyncRsp.Result)
}

// -------------------------------------------------------------------

// PBScale

// double X = 1;
inline void PBScale::clear_x() {
  x_ = 0;
}
inline double PBScale::x() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBScale.X)
  return x_;
}
inline void PBScale::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBScale.X)
}

// double Y = 2;
inline void PBScale::clear_y() {
  y_ = 0;
}
inline double PBScale::y() const {
  // @@protoc_insertion_point(field_get:TCCamp.PBScale.Y)
  return y_;
}
inline void PBScale::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.PBScale.Y)
}

// -------------------------------------------------------------------

// CubeTransformInfo

// int32 ID = 1;
inline void CubeTransformInfo::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 CubeTransformInfo::id() const {
  // @@protoc_insertion_point(field_get:TCCamp.CubeTransformInfo.ID)
  return id_;
}
inline void CubeTransformInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.CubeTransformInfo.ID)
}

// .TCCamp.PBPosition Pos = 2;
inline bool CubeTransformInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void CubeTransformInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::TCCamp::PBPosition& CubeTransformInfo::_internal_pos() const {
  return *pos_;
}
inline const ::TCCamp::PBPosition& CubeTransformInfo::pos() const {
  const ::TCCamp::PBPosition* p = pos_;
  // @@protoc_insertion_point(field_get:TCCamp.CubeTransformInfo.Pos)
  return p != NULL ? *p : *reinterpret_cast<const ::TCCamp::PBPosition*>(
      &::TCCamp::_PBPosition_default_instance_);
}
inline ::TCCamp::PBPosition* CubeTransformInfo::release_pos() {
  // @@protoc_insertion_point(field_release:TCCamp.CubeTransformInfo.Pos)
  
  ::TCCamp::PBPosition* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::TCCamp::PBPosition* CubeTransformInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    auto* p = CreateMaybeMessage<::TCCamp::PBPosition>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TCCamp.CubeTransformInfo.Pos)
  return pos_;
}
inline void CubeTransformInfo::set_allocated_pos(::TCCamp::PBPosition* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:TCCamp.CubeTransformInfo.Pos)
}

// .TCCamp.PBRotation Rot = 3;
inline bool CubeTransformInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void CubeTransformInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
}
inline const ::TCCamp::PBRotation& CubeTransformInfo::_internal_rot() const {
  return *rot_;
}
inline const ::TCCamp::PBRotation& CubeTransformInfo::rot() const {
  const ::TCCamp::PBRotation* p = rot_;
  // @@protoc_insertion_point(field_get:TCCamp.CubeTransformInfo.Rot)
  return p != NULL ? *p : *reinterpret_cast<const ::TCCamp::PBRotation*>(
      &::TCCamp::_PBRotation_default_instance_);
}
inline ::TCCamp::PBRotation* CubeTransformInfo::release_rot() {
  // @@protoc_insertion_point(field_release:TCCamp.CubeTransformInfo.Rot)
  
  ::TCCamp::PBRotation* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline ::TCCamp::PBRotation* CubeTransformInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    auto* p = CreateMaybeMessage<::TCCamp::PBRotation>(GetArenaNoVirtual());
    rot_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TCCamp.CubeTransformInfo.Rot)
  return rot_;
}
inline void CubeTransformInfo::set_allocated_rot(::TCCamp::PBRotation* rot) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rot_;
  }
  if (rot) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rot = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rot, submessage_arena);
    }
    
  } else {
    
  }
  rot_ = rot;
  // @@protoc_insertion_point(field_set_allocated:TCCamp.CubeTransformInfo.Rot)
}

// .TCCamp.PBScale Scale = 4;
inline bool CubeTransformInfo::has_scale() const {
  return this != internal_default_instance() && scale_ != NULL;
}
inline void CubeTransformInfo::clear_scale() {
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) {
    delete scale_;
  }
  scale_ = NULL;
}
inline const ::TCCamp::PBScale& CubeTransformInfo::_internal_scale() const {
  return *scale_;
}
inline const ::TCCamp::PBScale& CubeTransformInfo::scale() const {
  const ::TCCamp::PBScale* p = scale_;
  // @@protoc_insertion_point(field_get:TCCamp.CubeTransformInfo.Scale)
  return p != NULL ? *p : *reinterpret_cast<const ::TCCamp::PBScale*>(
      &::TCCamp::_PBScale_default_instance_);
}
inline ::TCCamp::PBScale* CubeTransformInfo::release_scale() {
  // @@protoc_insertion_point(field_release:TCCamp.CubeTransformInfo.Scale)
  
  ::TCCamp::PBScale* temp = scale_;
  scale_ = NULL;
  return temp;
}
inline ::TCCamp::PBScale* CubeTransformInfo::mutable_scale() {
  
  if (scale_ == NULL) {
    auto* p = CreateMaybeMessage<::TCCamp::PBScale>(GetArenaNoVirtual());
    scale_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TCCamp.CubeTransformInfo.Scale)
  return scale_;
}
inline void CubeTransformInfo::set_allocated_scale(::TCCamp::PBScale* scale) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete scale_;
  }
  if (scale) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scale = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scale, submessage_arena);
    }
    
  } else {
    
  }
  scale_ = scale;
  // @@protoc_insertion_point(field_set_allocated:TCCamp.CubeTransformInfo.Scale)
}

// -------------------------------------------------------------------

// EnterSceneReq

// int32 SceneID = 1;
inline void EnterSceneReq::clear_sceneid() {
  sceneid_ = 0;
}
inline ::google::protobuf::int32 EnterSceneReq::sceneid() const {
  // @@protoc_insertion_point(field_get:TCCamp.EnterSceneReq.SceneID)
  return sceneid_;
}
inline void EnterSceneReq::set_sceneid(::google::protobuf::int32 value) {
  
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.EnterSceneReq.SceneID)
}

// -------------------------------------------------------------------

// EnterSceneRsp

// .TCCamp.PB_RESULT_CODE Result = 1;
inline void EnterSceneRsp::clear_result() {
  result_ = 0;
}
inline ::TCCamp::PB_RESULT_CODE EnterSceneRsp::result() const {
  // @@protoc_insertion_point(field_get:TCCamp.EnterSceneRsp.Result)
  return static_cast< ::TCCamp::PB_RESULT_CODE >(result_);
}
inline void EnterSceneRsp::set_result(::TCCamp::PB_RESULT_CODE value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:TCCamp.EnterSceneRsp.Result)
}

// -------------------------------------------------------------------

// ExitSceneAnnounce

// repeated int32 RoleIds = 1;
inline int ExitSceneAnnounce::roleids_size() const {
  return roleids_.size();
}
inline void ExitSceneAnnounce::clear_roleids() {
  roleids_.Clear();
}
inline ::google::protobuf::int32 ExitSceneAnnounce::roleids(int index) const {
  // @@protoc_insertion_point(field_get:TCCamp.ExitSceneAnnounce.RoleIds)
  return roleids_.Get(index);
}
inline void ExitSceneAnnounce::set_roleids(int index, ::google::protobuf::int32 value) {
  roleids_.Set(index, value);
  // @@protoc_insertion_point(field_set:TCCamp.ExitSceneAnnounce.RoleIds)
}
inline void ExitSceneAnnounce::add_roleids(::google::protobuf::int32 value) {
  roleids_.Add(value);
  // @@protoc_insertion_point(field_add:TCCamp.ExitSceneAnnounce.RoleIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ExitSceneAnnounce::roleids() const {
  // @@protoc_insertion_point(field_list:TCCamp.ExitSceneAnnounce.RoleIds)
  return roleids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ExitSceneAnnounce::mutable_roleids() {
  // @@protoc_insertion_point(field_mutable_list:TCCamp.ExitSceneAnnounce.RoleIds)
  return &roleids_;
}

// repeated int32 CubeIds = 2;
inline int ExitSceneAnnounce::cubeids_size() const {
  return cubeids_.size();
}
inline void ExitSceneAnnounce::clear_cubeids() {
  cubeids_.Clear();
}
inline ::google::protobuf::int32 ExitSceneAnnounce::cubeids(int index) const {
  // @@protoc_insertion_point(field_get:TCCamp.ExitSceneAnnounce.CubeIds)
  return cubeids_.Get(index);
}
inline void ExitSceneAnnounce::set_cubeids(int index, ::google::protobuf::int32 value) {
  cubeids_.Set(index, value);
  // @@protoc_insertion_point(field_set:TCCamp.ExitSceneAnnounce.CubeIds)
}
inline void ExitSceneAnnounce::add_cubeids(::google::protobuf::int32 value) {
  cubeids_.Add(value);
  // @@protoc_insertion_point(field_add:TCCamp.ExitSceneAnnounce.CubeIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ExitSceneAnnounce::cubeids() const {
  // @@protoc_insertion_point(field_list:TCCamp.ExitSceneAnnounce.CubeIds)
  return cubeids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ExitSceneAnnounce::mutable_cubeids() {
  // @@protoc_insertion_point(field_mutable_list:TCCamp.ExitSceneAnnounce.CubeIds)
  return &cubeids_;
}

// -------------------------------------------------------------------

// SceneSyncAnnounce

// repeated .TCCamp.PBRoleMoveSyncData Datas = 1;
inline int SceneSyncAnnounce::datas_size() const {
  return datas_.size();
}
inline void SceneSyncAnnounce::clear_datas() {
  datas_.Clear();
}
inline ::TCCamp::PBRoleMoveSyncData* SceneSyncAnnounce::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:TCCamp.SceneSyncAnnounce.Datas)
  return datas_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TCCamp::PBRoleMoveSyncData >*
SceneSyncAnnounce::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:TCCamp.SceneSyncAnnounce.Datas)
  return &datas_;
}
inline const ::TCCamp::PBRoleMoveSyncData& SceneSyncAnnounce::datas(int index) const {
  // @@protoc_insertion_point(field_get:TCCamp.SceneSyncAnnounce.Datas)
  return datas_.Get(index);
}
inline ::TCCamp::PBRoleMoveSyncData* SceneSyncAnnounce::add_datas() {
  // @@protoc_insertion_point(field_add:TCCamp.SceneSyncAnnounce.Datas)
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TCCamp::PBRoleMoveSyncData >&
SceneSyncAnnounce::datas() const {
  // @@protoc_insertion_point(field_list:TCCamp.SceneSyncAnnounce.Datas)
  return datas_;
}

// repeated .TCCamp.CubeTransformInfo cubeInfos = 2;
inline int SceneSyncAnnounce::cubeinfos_size() const {
  return cubeinfos_.size();
}
inline void SceneSyncAnnounce::clear_cubeinfos() {
  cubeinfos_.Clear();
}
inline ::TCCamp::CubeTransformInfo* SceneSyncAnnounce::mutable_cubeinfos(int index) {
  // @@protoc_insertion_point(field_mutable:TCCamp.SceneSyncAnnounce.cubeInfos)
  return cubeinfos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TCCamp::CubeTransformInfo >*
SceneSyncAnnounce::mutable_cubeinfos() {
  // @@protoc_insertion_point(field_mutable_list:TCCamp.SceneSyncAnnounce.cubeInfos)
  return &cubeinfos_;
}
inline const ::TCCamp::CubeTransformInfo& SceneSyncAnnounce::cubeinfos(int index) const {
  // @@protoc_insertion_point(field_get:TCCamp.SceneSyncAnnounce.cubeInfos)
  return cubeinfos_.Get(index);
}
inline ::TCCamp::CubeTransformInfo* SceneSyncAnnounce::add_cubeinfos() {
  // @@protoc_insertion_point(field_add:TCCamp.SceneSyncAnnounce.cubeInfos)
  return cubeinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TCCamp::CubeTransformInfo >&
SceneSyncAnnounce::cubeinfos() const {
  // @@protoc_insertion_point(field_list:TCCamp.SceneSyncAnnounce.cubeInfos)
  return cubeinfos_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TCCamp

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TCCamp::CLIENT_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TCCamp::CLIENT_CMD>() {
  return ::TCCamp::CLIENT_CMD_descriptor();
}
template <> struct is_proto_enum< ::TCCamp::SERVER_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TCCamp::SERVER_CMD>() {
  return ::TCCamp::SERVER_CMD_descriptor();
}
template <> struct is_proto_enum< ::TCCamp::PB_RESULT_CODE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TCCamp::PB_RESULT_CODE>() {
  return ::TCCamp::PB_RESULT_CODE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_player_2eproto
