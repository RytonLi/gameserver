// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: player.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TCCamp {

  /// <summary>Holder for reflection information generated from player.proto</summary>
  public static partial class PlayerReflection {

    #region Descriptor
    /// <summary>File descriptor for player.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxwbGF5ZXIucHJvdG8SBlRDQ2FtcCIiCg1DbGllbnRQaW5nUmVxEhEKCVRp",
            "bWVzdGFtcBgBIAEoAyJKCg1TZXJ2ZXJQb25nUnNwEiYKBlJlc3VsdBgBIAEo",
            "DjIWLlRDQ2FtcC5QQl9SRVNVTFRfQ09ERRIRCglUaW1lc3RhbXAYAiABKAMi",
            "NgoPQWNjb3VudExvZ2luUmVxEhEKCUFjY291bnRJRBgBIAEoCRIQCghQYXNz",
            "d29yZBgCIAEoCSI5Cg9BY2NvdW50TG9naW5Sc3ASJgoGUmVzdWx0GAEgASgO",
            "MhYuVENDYW1wLlBCX1JFU1VMVF9DT0RFIjcKEEFjY291bnRDcmVhdGVSZXES",
            "EQoJYWNjb3VudElEGAEgASgJEhAKCFBhc3N3b3JkGAIgASgJIjoKEEFjY291",
            "bnRDcmVhdGVSc3ASJgoGUmVzdWx0GAEgASgOMhYuVENDYW1wLlBCX1JFU1VM",
            "VF9DT0RFIiIKClBCUG9zaXRpb24SCQoBWBgBIAEoARIJCgFZGAIgASgBIiIK",
            "ClBCUm90YXRpb24SCQoBWBgBIAEoARIJCgFZGAIgASgBIl8KDFBCUm9sZVN0",
            "YXR1cxIfCgNSb3QYASABKAsyEi5UQ0NhbXAuUEJSb3RhdGlvbhINCgVTcGVl",
            "ZBgCIAEoBRIfCgNQb3MYAyABKAsyEi5UQ0NhbXAuUEJQb3NpdGlvbiIkCglQ",
            "QkJhZ0l0ZW0SCgoCSWQYASABKAUSCwoDTnVtGAIgASgFIoQBCgpQQlJvbGVE",
            "YXRhEg4KBlJvbGVJRBgBIAEoBRIPCgdTY2VuZUlkGAIgASgFEg0KBU1vbmV5",
            "GAMgASgFEiQKBlN0YXR1cxgEIAEoCzIULlRDQ2FtcC5QQlJvbGVTdGF0dXMS",
            "IAoFSXRlbXMYBSADKAsyES5UQ0NhbXAuUEJCYWdJdGVtIjcKDVJvbGVDcmVh",
            "dGVSc3ASJgoGUmVzdWx0GAEgASgOMhYuVENDYW1wLlBCX1JFU1VMVF9DT0RF",
            "IkkKDkdldFJvbGVMaXN0UnNwEiYKBlJlc3VsdBgBIAEoDjIWLlRDQ2FtcC5Q",
            "Ql9SRVNVTFRfQ09ERRIPCgdSb2xlSURzGAIgAygFIiAKDkdldFJvbGVEYXRh",
            "UmVxEg4KBlJvbGVJRBgBIAEoBSJaCg5HZXRSb2xlRGF0YVJzcBImCgZSZXN1",
            "bHQYASABKA4yFi5UQ0NhbXAuUEJfUkVTVUxUX0NPREUSIAoERGF0YRgCIAEo",
            "CzISLlRDQ2FtcC5QQlJvbGVEYXRhIkcKDlVwZGF0ZU1vbmV5UnNwEiYKBlJl",
            "c3VsdBgBIAEoDjIWLlRDQ2FtcC5QQl9SRVNVTFRfQ09ERRINCgVNb25leRgC",
            "IAEoBSJcChBVcGRhdGVCYWdMaXN0UnNwEiYKBlJlc3VsdBgBIAEoDjIWLlRD",
            "Q2FtcC5QQl9SRVNVTFRfQ09ERRIgCgVJdGVtcxgCIAMoCzIRLlRDQ2FtcC5Q",
            "QkJhZ0l0ZW0ivQEKClBCU2hvcEl0ZW0SCgoCSWQYASABKAUSDQoFUHJpY2UY",
            "AiABKAUSHQoVUGVyc29uYWxMaW1pdE1heENvdW50GAMgASgREhoKElBlcnNv",
            "bmFsTGltaXRDb3VudBgEIAEoERIbChNHbG9iYWxMaW1pdE1heENvdW50GAUg",
            "ASgREhgKEEdsb2JhbExpbWl0Q291bnQYBiABKBESEQoJU3RhcnRUaW1lGAcg",
            "ASgSEg8KB0VuZFRpbWUYCCABKBIiXgoRVXBkYXRlU2hvcExpc3RSc3ASJgoG",
            "UmVzdWx0GAEgASgOMhYuVENDYW1wLlBCX1JFU1VMVF9DT0RFEiEKBUl0ZW1z",
            "GAIgAygLMhIuVENDYW1wLlBCU2hvcEl0ZW0iMwoOUm9sZUJ1eUl0ZW1SZXES",
            "DgoGSXRlbUlEGAEgASgFEhEKCUl0ZW1Db3VudBgCIAEoBSI4Cg5Sb2xlQnV5",
            "SXRlbVJzcBImCgZSZXN1bHQYASABKA4yFi5UQ0NhbXAuUEJfUkVTVUxUX0NP",
            "REUiSgoSUEJSb2xlTW92ZVN5bmNEYXRhEg4KBlJvbGVJRBgBIAEoBRIkCgZz",
            "dGF0dXMYAiABKAsyFC5UQ0NhbXAuUEJSb2xlU3RhdHVzIj0KD1JvbGVNb3Zl",
            "U3luY1JlcRIqCgZzdGF0dXMYASABKAsyGi5UQ0NhbXAuUEJSb2xlTW92ZVN5",
            "bmNEYXRhIjkKD1JvbGVNb3ZlU3luY1JzcBImCgZSZXN1bHQYASABKA4yFi5U",
            "Q0NhbXAuUEJfUkVTVUxUX0NPREUiHwoHUEJTY2FsZRIJCgFYGAEgASgBEgkK",
            "AVkYAiABKAEigQEKEUN1YmVUcmFuc2Zvcm1JbmZvEgoKAklEGAEgASgFEh8K",
            "A1BvcxgCIAEoCzISLlRDQ2FtcC5QQlBvc2l0aW9uEh8KA1JvdBgDIAEoCzIS",
            "LlRDQ2FtcC5QQlJvdGF0aW9uEh4KBVNjYWxlGAQgASgLMg8uVENDYW1wLlBC",
            "U2NhbGUiIAoNRW50ZXJTY2VuZVJlcRIPCgdTY2VuZUlEGAEgASgFIjcKDUVu",
            "dGVyU2NlbmVSc3ASJgoGUmVzdWx0GAEgASgOMhYuVENDYW1wLlBCX1JFU1VM",
            "VF9DT0RFIjUKEUV4aXRTY2VuZUFubm91bmNlEg8KB1JvbGVJZHMYASADKAUS",
            "DwoHQ3ViZUlkcxgCIAMoBSJsChFTY2VuZVN5bmNBbm5vdW5jZRIpCgVEYXRh",
            "cxgBIAMoCzIaLlRDQ2FtcC5QQlJvbGVNb3ZlU3luY0RhdGESLAoJY3ViZUlu",
            "Zm9zGAIgAygLMhkuVENDYW1wLkN1YmVUcmFuc2Zvcm1JbmZvKqIDCgpDTElF",
            "TlRfQ01EEhYKEkNMSUVOVF9DTURfSU5WQUxJRBAAEhEKC0NMSUVOVF9QSU5H",
            "ELHqARIWChBDTElFTlRfTE9HSU5fUkVREJXrARIXChFDTElFTlRfQ1JFQVRF",
            "X1JFURCW6wESHAoWQ0xJRU5UX0NSRUFURV9ST0xFX1JFURD56wESHQoXQ0xJ",
            "RU5UX0dFVF9ST0xFTElTVF9SRVEQ+usBEh0KF0NMSUVOVF9HRVRfUk9MRURB",
            "VEFfUkVREPvrARIdChdDTElFTlRfVVBEQVRFX01PTkVZX1JFURDd7AESHwoZ",
            "Q0xJRU5UX1VQREFURV9CQUdMSVNUX1JFURDe7AESIAoaQ0xJRU5UX1VQREFU",
            "RV9TSE9QTElTVF9SRVEQ3+wBEh4KGENMSUVOVF9ST0xFX0JVWV9JVEVNX1JF",
            "URDB7QESHwoZQ0xJRU5UX1JPTEVfTU9WRV9TWU5DX1JFURCl7gESHAoWQ0xJ",
            "RU5UX0VOVEVSX1NDRU5FX1JFURCm7gESGwoVQ0xJRU5UX0VYSVRfU0NFTkVf",
            "UkVREKfuASrgAwoKU0VSVkVSX0NNRBIWChJTRVJWRVJfQ01EX0lOVkFMSUQQ",
            "ABIQCgtTRVJWRVJfUE9ORxCRThIVChBTRVJWRVJfTE9HSU5fUlNQEPVOEhYK",
            "EVNFUlZFUl9DUkVBVEVfUlNQEPZOEhsKFlNFUlZFUl9DUkVBVEVfUk9MRV9S",
            "U1AQ2U8SHAoXU0VSVkVSX0dFVF9ST0xFTElTVF9SU1AQ2k8SHAoXU0VSVkVS",
            "X0dFVF9ST0xFREFUQV9SU1AQ208SHAoXU0VSVkVSX1VQREFURV9NT05FWV9S",
            "U1AQvVASHgoZU0VSVkVSX1VQREFURV9CQUdMSVNUX1JTUBC+UBIfChpTRVJW",
            "RVJfVVBEQVRFX1NIT1BMSVNUX1JTUBC/UBIdChhTRVJWRVJfUk9MRV9CVVlf",
            "SVRFTV9SU1AQoVESHgoZU0VSVkVSX1JPTEVfTU9WRV9TWU5DX1JTUBCFUhIb",
            "ChZTRVJWRVJfRU5URVJfU0NFTkVfUlNQEIZSEhoKFVNFUlZFUl9FWElUX1ND",
            "RU5FX1JTUBCHUhIjCh5TRVJWRVJfUk9MRV9NT1ZFX1NZTkNfQU5OT1VOQ0UQ",
            "+FUSJAofU0VSVkVSX1JPTEVfRVhJVF9TQ0VORV9BTk5PVU5DRRD5VSrmAwoO",
            "UEJfUkVTVUxUX0NPREUSCwoHU1VDQ0VTUxAAEhkKFExPR0lOX1BBU1NXT1JE",
            "X0VSUk9SEMgBEhwKF0xPR0lOX0FDQ09VTlRfTk9UX0VYSVNUEMkBEhkKFExP",
            "R0lOX0FDQ09VTlRfT05MSU5FEMoBEhkKFENSRUFURV9BQ0NPVU5UX0VYSVNU",
            "EKwCEhoKFUNSRUFURV9ST0xFX0NPVU5UX01BWBCQAxIgChtHRVRfUk9MRURB",
            "VEFfUk9MRV9OT1RfRVhJU1QQkQMSFwoSTU9ORVlfVVBEQVRBX0VSUk9SEPQD",
            "EhYKEVNIT1BfVVBEQVRBX0VSUk9SENgEEhwKF1NIT1BfQlVZX0lURU1fTk9U",
            "X0VYSVNUENkEEiIKHVNIT1BfQlVZX0lURU1fR0xPQkFMX1NIT1JUQUdFENoE",
            "EiQKH1NIT1BfQlVZX0lURU1fUEVSU09OQUxfU0hPUlRBR0UQ2wQSHAoXU0hP",
            "UF9CVVlfTU9ORVlfU0hPUlRBR0UQ3AQSGgoVU0hPUF9CVVlfVElNRV9JTlZB",
            "TElEEN0EEhUKEEJBR19VUERBVEFfRVJST1IQvAUSHAoXU1lOQ19QT1NfU1RB",
            "VFVTX0lOVkFMSUQQoAYSEgoMU0VSVkVSX0VSUk9SEMC4AmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TCCamp.CLIENT_CMD), typeof(global::TCCamp.SERVER_CMD), typeof(global::TCCamp.PB_RESULT_CODE), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.ClientPingReq), global::TCCamp.ClientPingReq.Parser, new[]{ "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.ServerPongRsp), global::TCCamp.ServerPongRsp.Parser, new[]{ "Result", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.AccountLoginReq), global::TCCamp.AccountLoginReq.Parser, new[]{ "AccountID", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.AccountLoginRsp), global::TCCamp.AccountLoginRsp.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.AccountCreateReq), global::TCCamp.AccountCreateReq.Parser, new[]{ "AccountID", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.AccountCreateRsp), global::TCCamp.AccountCreateRsp.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.PBPosition), global::TCCamp.PBPosition.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.PBRotation), global::TCCamp.PBRotation.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.PBRoleStatus), global::TCCamp.PBRoleStatus.Parser, new[]{ "Rot", "Speed", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.PBBagItem), global::TCCamp.PBBagItem.Parser, new[]{ "Id", "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.PBRoleData), global::TCCamp.PBRoleData.Parser, new[]{ "RoleID", "SceneId", "Money", "Status", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.RoleCreateRsp), global::TCCamp.RoleCreateRsp.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.GetRoleListRsp), global::TCCamp.GetRoleListRsp.Parser, new[]{ "Result", "RoleIDs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.GetRoleDataReq), global::TCCamp.GetRoleDataReq.Parser, new[]{ "RoleID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.GetRoleDataRsp), global::TCCamp.GetRoleDataRsp.Parser, new[]{ "Result", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.UpdateMoneyRsp), global::TCCamp.UpdateMoneyRsp.Parser, new[]{ "Result", "Money" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.UpdateBagListRsp), global::TCCamp.UpdateBagListRsp.Parser, new[]{ "Result", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.PBShopItem), global::TCCamp.PBShopItem.Parser, new[]{ "Id", "Price", "PersonalLimitMaxCount", "PersonalLimitCount", "GlobalLimitMaxCount", "GlobalLimitCount", "StartTime", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.UpdateShopListRsp), global::TCCamp.UpdateShopListRsp.Parser, new[]{ "Result", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.RoleBuyItemReq), global::TCCamp.RoleBuyItemReq.Parser, new[]{ "ItemID", "ItemCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.RoleBuyItemRsp), global::TCCamp.RoleBuyItemRsp.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.PBRoleMoveSyncData), global::TCCamp.PBRoleMoveSyncData.Parser, new[]{ "RoleID", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.RoleMoveSyncReq), global::TCCamp.RoleMoveSyncReq.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.RoleMoveSyncRsp), global::TCCamp.RoleMoveSyncRsp.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.PBScale), global::TCCamp.PBScale.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.CubeTransformInfo), global::TCCamp.CubeTransformInfo.Parser, new[]{ "ID", "Pos", "Rot", "Scale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.EnterSceneReq), global::TCCamp.EnterSceneReq.Parser, new[]{ "SceneID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.EnterSceneRsp), global::TCCamp.EnterSceneRsp.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.ExitSceneAnnounce), global::TCCamp.ExitSceneAnnounce.Parser, new[]{ "RoleIds", "CubeIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TCCamp.SceneSyncAnnounce), global::TCCamp.SceneSyncAnnounce.Parser, new[]{ "Datas", "CubeInfos" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CLIENT_CMD {
    [pbr::OriginalName("CLIENT_CMD_INVALID")] Invalid = 0,
    [pbr::OriginalName("CLIENT_PING")] ClientPing = 30001,
    [pbr::OriginalName("CLIENT_LOGIN_REQ")] ClientLoginReq = 30101,
    [pbr::OriginalName("CLIENT_CREATE_REQ")] ClientCreateReq = 30102,
    [pbr::OriginalName("CLIENT_CREATE_ROLE_REQ")] ClientCreateRoleReq = 30201,
    [pbr::OriginalName("CLIENT_GET_ROLELIST_REQ")] ClientGetRolelistReq = 30202,
    /// <summary>
    ///登录成功后 请求角色数据
    /// </summary>
    [pbr::OriginalName("CLIENT_GET_ROLEDATA_REQ")] ClientGetRoledataReq = 30203,
    [pbr::OriginalName("CLIENT_UPDATE_MONEY_REQ")] ClientUpdateMoneyReq = 30301,
    [pbr::OriginalName("CLIENT_UPDATE_BAGLIST_REQ")] ClientUpdateBaglistReq = 30302,
    [pbr::OriginalName("CLIENT_UPDATE_SHOPLIST_REQ")] ClientUpdateShoplistReq = 30303,
    [pbr::OriginalName("CLIENT_ROLE_BUY_ITEM_REQ")] ClientRoleBuyItemReq = 30401,
    [pbr::OriginalName("CLIENT_ROLE_MOVE_SYNC_REQ")] ClientRoleMoveSyncReq = 30501,
    [pbr::OriginalName("CLIENT_ENTER_SCENE_REQ")] ClientEnterSceneReq = 30502,
    [pbr::OriginalName("CLIENT_EXIT_SCENE_REQ")] ClientExitSceneReq = 30503,
  }

  public enum SERVER_CMD {
    [pbr::OriginalName("SERVER_CMD_INVALID")] Invalid = 0,
    [pbr::OriginalName("SERVER_PONG")] ServerPong = 10001,
    [pbr::OriginalName("SERVER_LOGIN_RSP")] ServerLoginRsp = 10101,
    [pbr::OriginalName("SERVER_CREATE_RSP")] ServerCreateRsp = 10102,
    [pbr::OriginalName("SERVER_CREATE_ROLE_RSP")] ServerCreateRoleRsp = 10201,
    [pbr::OriginalName("SERVER_GET_ROLELIST_RSP")] ServerGetRolelistRsp = 10202,
    [pbr::OriginalName("SERVER_GET_ROLEDATA_RSP")] ServerGetRoledataRsp = 10203,
    [pbr::OriginalName("SERVER_UPDATE_MONEY_RSP")] ServerUpdateMoneyRsp = 10301,
    [pbr::OriginalName("SERVER_UPDATE_BAGLIST_RSP")] ServerUpdateBaglistRsp = 10302,
    [pbr::OriginalName("SERVER_UPDATE_SHOPLIST_RSP")] ServerUpdateShoplistRsp = 10303,
    [pbr::OriginalName("SERVER_ROLE_BUY_ITEM_RSP")] ServerRoleBuyItemRsp = 10401,
    [pbr::OriginalName("SERVER_ROLE_MOVE_SYNC_RSP")] ServerRoleMoveSyncRsp = 10501,
    [pbr::OriginalName("SERVER_ENTER_SCENE_RSP")] ServerEnterSceneRsp = 10502,
    [pbr::OriginalName("SERVER_EXIT_SCENE_RSP")] ServerExitSceneRsp = 10503,
    /// <summary>
    ///玩家同步到其他客户端(广播)
    /// </summary>
    [pbr::OriginalName("SERVER_ROLE_MOVE_SYNC_ANNOUNCE")] ServerRoleMoveSyncAnnounce = 11000,
    [pbr::OriginalName("SERVER_ROLE_EXIT_SCENE_ANNOUNCE")] ServerRoleExitSceneAnnounce = 11001,
  }

  public enum PB_RESULT_CODE {
    [pbr::OriginalName("SUCCESS")] Success = 0,
    /// <summary>
    /// 登录
    /// </summary>
    [pbr::OriginalName("LOGIN_PASSWORD_ERROR")] LoginPasswordError = 200,
    [pbr::OriginalName("LOGIN_ACCOUNT_NOT_EXIST")] LoginAccountNotExist = 201,
    [pbr::OriginalName("LOGIN_ACCOUNT_ONLINE")] LoginAccountOnline = 202,
    /// <summary>
    /// 创建账号
    /// </summary>
    [pbr::OriginalName("CREATE_ACCOUNT_EXIST")] CreateAccountExist = 300,
    /// <summary>
    /// 获取玩家数据
    /// </summary>
    [pbr::OriginalName("CREATE_ROLE_COUNT_MAX")] CreateRoleCountMax = 400,
    [pbr::OriginalName("GET_ROLEDATA_ROLE_NOT_EXIST")] GetRoledataRoleNotExist = 401,
    /// <summary>
    /// 金钱
    /// </summary>
    [pbr::OriginalName("MONEY_UPDATA_ERROR")] MoneyUpdataError = 500,
    /// <summary>
    /// 商店
    /// </summary>
    [pbr::OriginalName("SHOP_UPDATA_ERROR")] ShopUpdataError = 600,
    [pbr::OriginalName("SHOP_BUY_ITEM_NOT_EXIST")] ShopBuyItemNotExist = 601,
    [pbr::OriginalName("SHOP_BUY_ITEM_GLOBAL_SHORTAGE")] ShopBuyItemGlobalShortage = 602,
    [pbr::OriginalName("SHOP_BUY_ITEM_PERSONAL_SHORTAGE")] ShopBuyItemPersonalShortage = 603,
    [pbr::OriginalName("SHOP_BUY_MONEY_SHORTAGE")] ShopBuyMoneyShortage = 604,
    [pbr::OriginalName("SHOP_BUY_TIME_INVALID")] ShopBuyTimeInvalid = 605,
    /// <summary>
    /// 背包
    /// </summary>
    [pbr::OriginalName("BAG_UPDATA_ERROR")] BagUpdataError = 700,
    /// <summary>
    /// 位置
    /// </summary>
    [pbr::OriginalName("SYNC_POS_STATUS_INVALID")] SyncPosStatusInvalid = 800,
    [pbr::OriginalName("SERVER_ERROR")] ServerError = 40000,
  }

  #endregion

  #region Messages
  public sealed partial class ClientPingReq : pb::IMessage<ClientPingReq> {
    private static readonly pb::MessageParser<ClientPingReq> _parser = new pb::MessageParser<ClientPingReq>(() => new ClientPingReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientPingReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientPingReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientPingReq(ClientPingReq other) : this() {
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientPingReq Clone() {
      return new ClientPingReq(this);
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientPingReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientPingReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientPingReq other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerPongRsp : pb::IMessage<ServerPongRsp> {
    private static readonly pb::MessageParser<ServerPongRsp> _parser = new pb::MessageParser<ServerPongRsp>(() => new ServerPongRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerPongRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerPongRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerPongRsp(ServerPongRsp other) : this() {
      result_ = other.result_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerPongRsp Clone() {
      return new ServerPongRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerPongRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerPongRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerPongRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountLoginReq : pb::IMessage<AccountLoginReq> {
    private static readonly pb::MessageParser<AccountLoginReq> _parser = new pb::MessageParser<AccountLoginReq>(() => new AccountLoginReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountLoginReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountLoginReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountLoginReq(AccountLoginReq other) : this() {
      accountID_ = other.accountID_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountLoginReq Clone() {
      return new AccountLoginReq(this);
    }

    /// <summary>Field number for the "AccountID" field.</summary>
    public const int AccountIDFieldNumber = 1;
    private string accountID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountID {
      get { return accountID_; }
      set {
        accountID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountLoginReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountLoginReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountID != other.AccountID) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountID.Length != 0) hash ^= AccountID.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountID);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountID);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountLoginReq other) {
      if (other == null) {
        return;
      }
      if (other.AccountID.Length != 0) {
        AccountID = other.AccountID;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountID = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountLoginRsp : pb::IMessage<AccountLoginRsp> {
    private static readonly pb::MessageParser<AccountLoginRsp> _parser = new pb::MessageParser<AccountLoginRsp>(() => new AccountLoginRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountLoginRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountLoginRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountLoginRsp(AccountLoginRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountLoginRsp Clone() {
      return new AccountLoginRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountLoginRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountLoginRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountLoginRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountCreateReq : pb::IMessage<AccountCreateReq> {
    private static readonly pb::MessageParser<AccountCreateReq> _parser = new pb::MessageParser<AccountCreateReq>(() => new AccountCreateReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountCreateReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateReq(AccountCreateReq other) : this() {
      accountID_ = other.accountID_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateReq Clone() {
      return new AccountCreateReq(this);
    }

    /// <summary>Field number for the "accountID" field.</summary>
    public const int AccountIDFieldNumber = 1;
    private string accountID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountID {
      get { return accountID_; }
      set {
        accountID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountCreateReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountCreateReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountID != other.AccountID) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountID.Length != 0) hash ^= AccountID.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountID);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountID);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountCreateReq other) {
      if (other == null) {
        return;
      }
      if (other.AccountID.Length != 0) {
        AccountID = other.AccountID;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountID = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountCreateRsp : pb::IMessage<AccountCreateRsp> {
    private static readonly pb::MessageParser<AccountCreateRsp> _parser = new pb::MessageParser<AccountCreateRsp>(() => new AccountCreateRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountCreateRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateRsp(AccountCreateRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateRsp Clone() {
      return new AccountCreateRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountCreateRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountCreateRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountCreateRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///------------请求角色数据--------------
  /// </summary>
  public sealed partial class PBPosition : pb::IMessage<PBPosition> {
    private static readonly pb::MessageParser<PBPosition> _parser = new pb::MessageParser<PBPosition>(() => new PBPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBPosition(PBPosition other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBPosition Clone() {
      return new PBPosition(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBPosition other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRotation : pb::IMessage<PBRotation> {
    private static readonly pb::MessageParser<PBRotation> _parser = new pb::MessageParser<PBRotation>(() => new PBRotation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRotation(PBRotation other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRotation Clone() {
      return new PBRotation(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRotation other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRoleStatus : pb::IMessage<PBRoleStatus> {
    private static readonly pb::MessageParser<PBRoleStatus> _parser = new pb::MessageParser<PBRoleStatus>(() => new PBRoleStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRoleStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRoleStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRoleStatus(PBRoleStatus other) : this() {
      rot_ = other.rot_ != null ? other.rot_.Clone() : null;
      speed_ = other.speed_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRoleStatus Clone() {
      return new PBRoleStatus(this);
    }

    /// <summary>Field number for the "Rot" field.</summary>
    public const int RotFieldNumber = 1;
    private global::TCCamp.PBRotation rot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PBRotation Rot {
      get { return rot_; }
      set {
        rot_ = value;
      }
    }

    /// <summary>Field number for the "Speed" field.</summary>
    public const int SpeedFieldNumber = 2;
    private int speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 3;
    private global::TCCamp.PBPosition pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PBPosition Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRoleStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRoleStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rot, other.Rot)) return false;
      if (Speed != other.Speed) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rot_ != null) hash ^= Rot.GetHashCode();
      if (Speed != 0) hash ^= Speed.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rot_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rot);
      }
      if (Speed != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Speed);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rot);
      }
      if (Speed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Speed);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRoleStatus other) {
      if (other == null) {
        return;
      }
      if (other.rot_ != null) {
        if (rot_ == null) {
          rot_ = new global::TCCamp.PBRotation();
        }
        Rot.MergeFrom(other.Rot);
      }
      if (other.Speed != 0) {
        Speed = other.Speed;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          pos_ = new global::TCCamp.PBPosition();
        }
        Pos.MergeFrom(other.Pos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rot_ == null) {
              rot_ = new global::TCCamp.PBRotation();
            }
            input.ReadMessage(rot_);
            break;
          }
          case 16: {
            Speed = input.ReadInt32();
            break;
          }
          case 26: {
            if (pos_ == null) {
              pos_ = new global::TCCamp.PBPosition();
            }
            input.ReadMessage(pos_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBBagItem : pb::IMessage<PBBagItem> {
    private static readonly pb::MessageParser<PBBagItem> _parser = new pb::MessageParser<PBBagItem>(() => new PBBagItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBBagItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBBagItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBBagItem(PBBagItem other) : this() {
      id_ = other.id_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBBagItem Clone() {
      return new PBBagItem(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBBagItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBBagItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBBagItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRoleData : pb::IMessage<PBRoleData> {
    private static readonly pb::MessageParser<PBRoleData> _parser = new pb::MessageParser<PBRoleData>(() => new PBRoleData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRoleData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRoleData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRoleData(PBRoleData other) : this() {
      roleID_ = other.roleID_;
      sceneId_ = other.sceneId_;
      money_ = other.money_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRoleData Clone() {
      return new PBRoleData(this);
    }

    /// <summary>Field number for the "RoleID" field.</summary>
    public const int RoleIDFieldNumber = 1;
    private int roleID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleID {
      get { return roleID_; }
      set {
        roleID_ = value;
      }
    }

    /// <summary>Field number for the "SceneId" field.</summary>
    public const int SceneIdFieldNumber = 2;
    private int sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 3;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::TCCamp.PBRoleStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PBRoleStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TCCamp.PBBagItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(42, global::TCCamp.PBBagItem.Parser);
    private readonly pbc::RepeatedField<global::TCCamp.PBBagItem> items_ = new pbc::RepeatedField<global::TCCamp.PBBagItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TCCamp.PBBagItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRoleData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRoleData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoleID != other.RoleID) return false;
      if (SceneId != other.SceneId) return false;
      if (Money != other.Money) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoleID != 0) hash ^= RoleID.GetHashCode();
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoleID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleID);
      }
      if (SceneId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SceneId);
      }
      if (Money != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Money);
      }
      if (status_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Status);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoleID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleID);
      }
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SceneId);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRoleData other) {
      if (other == null) {
        return;
      }
      if (other.RoleID != 0) {
        RoleID = other.RoleID;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::TCCamp.PBRoleStatus();
        }
        Status.MergeFrom(other.Status);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoleID = input.ReadInt32();
            break;
          }
          case 16: {
            SceneId = input.ReadInt32();
            break;
          }
          case 24: {
            Money = input.ReadInt32();
            break;
          }
          case 34: {
            if (status_ == null) {
              status_ = new global::TCCamp.PBRoleStatus();
            }
            input.ReadMessage(status_);
            break;
          }
          case 42: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoleCreateRsp : pb::IMessage<RoleCreateRsp> {
    private static readonly pb::MessageParser<RoleCreateRsp> _parser = new pb::MessageParser<RoleCreateRsp>(() => new RoleCreateRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleCreateRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleCreateRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleCreateRsp(RoleCreateRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleCreateRsp Clone() {
      return new RoleCreateRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleCreateRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleCreateRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleCreateRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRoleListRsp : pb::IMessage<GetRoleListRsp> {
    private static readonly pb::MessageParser<GetRoleListRsp> _parser = new pb::MessageParser<GetRoleListRsp>(() => new GetRoleListRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRoleListRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoleListRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoleListRsp(GetRoleListRsp other) : this() {
      result_ = other.result_;
      roleIDs_ = other.roleIDs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoleListRsp Clone() {
      return new GetRoleListRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "RoleIDs" field.</summary>
    public const int RoleIDsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_roleIDs_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> roleIDs_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RoleIDs {
      get { return roleIDs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRoleListRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRoleListRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!roleIDs_.Equals(other.roleIDs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= roleIDs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      roleIDs_.WriteTo(output, _repeated_roleIDs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += roleIDs_.CalculateSize(_repeated_roleIDs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRoleListRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      roleIDs_.Add(other.roleIDs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            roleIDs_.AddEntriesFrom(input, _repeated_roleIDs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRoleDataReq : pb::IMessage<GetRoleDataReq> {
    private static readonly pb::MessageParser<GetRoleDataReq> _parser = new pb::MessageParser<GetRoleDataReq>(() => new GetRoleDataReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRoleDataReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoleDataReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoleDataReq(GetRoleDataReq other) : this() {
      roleID_ = other.roleID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoleDataReq Clone() {
      return new GetRoleDataReq(this);
    }

    /// <summary>Field number for the "RoleID" field.</summary>
    public const int RoleIDFieldNumber = 1;
    private int roleID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleID {
      get { return roleID_; }
      set {
        roleID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRoleDataReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRoleDataReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoleID != other.RoleID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoleID != 0) hash ^= RoleID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoleID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoleID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRoleDataReq other) {
      if (other == null) {
        return;
      }
      if (other.RoleID != 0) {
        RoleID = other.RoleID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoleID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRoleDataRsp : pb::IMessage<GetRoleDataRsp> {
    private static readonly pb::MessageParser<GetRoleDataRsp> _parser = new pb::MessageParser<GetRoleDataRsp>(() => new GetRoleDataRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRoleDataRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoleDataRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoleDataRsp(GetRoleDataRsp other) : this() {
      result_ = other.result_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoleDataRsp Clone() {
      return new GetRoleDataRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 2;
    private global::TCCamp.PBRoleData data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PBRoleData Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRoleDataRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRoleDataRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRoleDataRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          data_ = new global::TCCamp.PBRoleData();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
          case 18: {
            if (data_ == null) {
              data_ = new global::TCCamp.PBRoleData();
            }
            input.ReadMessage(data_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateMoneyRsp : pb::IMessage<UpdateMoneyRsp> {
    private static readonly pb::MessageParser<UpdateMoneyRsp> _parser = new pb::MessageParser<UpdateMoneyRsp>(() => new UpdateMoneyRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMoneyRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMoneyRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMoneyRsp(UpdateMoneyRsp other) : this() {
      result_ = other.result_;
      money_ = other.money_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMoneyRsp Clone() {
      return new UpdateMoneyRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 2;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMoneyRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMoneyRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Money != other.Money) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (Money != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Money);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMoneyRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
          case 16: {
            Money = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateBagListRsp : pb::IMessage<UpdateBagListRsp> {
    private static readonly pb::MessageParser<UpdateBagListRsp> _parser = new pb::MessageParser<UpdateBagListRsp>(() => new UpdateBagListRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateBagListRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBagListRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBagListRsp(UpdateBagListRsp other) : this() {
      result_ = other.result_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBagListRsp Clone() {
      return new UpdateBagListRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TCCamp.PBBagItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::TCCamp.PBBagItem.Parser);
    private readonly pbc::RepeatedField<global::TCCamp.PBBagItem> items_ = new pbc::RepeatedField<global::TCCamp.PBBagItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TCCamp.PBBagItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateBagListRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateBagListRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateBagListRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBShopItem : pb::IMessage<PBShopItem> {
    private static readonly pb::MessageParser<PBShopItem> _parser = new pb::MessageParser<PBShopItem>(() => new PBShopItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBShopItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBShopItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBShopItem(PBShopItem other) : this() {
      id_ = other.id_;
      price_ = other.price_;
      personalLimitMaxCount_ = other.personalLimitMaxCount_;
      personalLimitCount_ = other.personalLimitCount_;
      globalLimitMaxCount_ = other.globalLimitMaxCount_;
      globalLimitCount_ = other.globalLimitCount_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBShopItem Clone() {
      return new PBShopItem(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Price" field.</summary>
    public const int PriceFieldNumber = 2;
    private int price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "PersonalLimitMaxCount" field.</summary>
    public const int PersonalLimitMaxCountFieldNumber = 3;
    private int personalLimitMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PersonalLimitMaxCount {
      get { return personalLimitMaxCount_; }
      set {
        personalLimitMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "PersonalLimitCount" field.</summary>
    public const int PersonalLimitCountFieldNumber = 4;
    private int personalLimitCount_;
    /// <summary>
    ///个人可购买数量 -1 -> 不限量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PersonalLimitCount {
      get { return personalLimitCount_; }
      set {
        personalLimitCount_ = value;
      }
    }

    /// <summary>Field number for the "GlobalLimitMaxCount" field.</summary>
    public const int GlobalLimitMaxCountFieldNumber = 5;
    private int globalLimitMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GlobalLimitMaxCount {
      get { return globalLimitMaxCount_; }
      set {
        globalLimitMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "GlobalLimitCount" field.</summary>
    public const int GlobalLimitCountFieldNumber = 6;
    private int globalLimitCount_;
    /// <summary>
    ///全服可购买数量 -1 -> 不限量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GlobalLimitCount {
      get { return globalLimitCount_; }
      set {
        globalLimitCount_ = value;
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 7;
    private long startTime_;
    /// <summary>
    ///开始时间戳 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 8;
    private long endTime_;
    /// <summary>
    ///结束时间戳 开始时间戳和结束时间戳均为-1表示不限时，永久有效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBShopItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBShopItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Price != other.Price) return false;
      if (PersonalLimitMaxCount != other.PersonalLimitMaxCount) return false;
      if (PersonalLimitCount != other.PersonalLimitCount) return false;
      if (GlobalLimitMaxCount != other.GlobalLimitMaxCount) return false;
      if (GlobalLimitCount != other.GlobalLimitCount) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Price != 0) hash ^= Price.GetHashCode();
      if (PersonalLimitMaxCount != 0) hash ^= PersonalLimitMaxCount.GetHashCode();
      if (PersonalLimitCount != 0) hash ^= PersonalLimitCount.GetHashCode();
      if (GlobalLimitMaxCount != 0) hash ^= GlobalLimitMaxCount.GetHashCode();
      if (GlobalLimitCount != 0) hash ^= GlobalLimitCount.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Price != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Price);
      }
      if (PersonalLimitMaxCount != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(PersonalLimitMaxCount);
      }
      if (PersonalLimitCount != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(PersonalLimitCount);
      }
      if (GlobalLimitMaxCount != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(GlobalLimitMaxCount);
      }
      if (GlobalLimitCount != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(GlobalLimitCount);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(56);
        output.WriteSInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(64);
        output.WriteSInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Price != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Price);
      }
      if (PersonalLimitMaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PersonalLimitMaxCount);
      }
      if (PersonalLimitCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(PersonalLimitCount);
      }
      if (GlobalLimitMaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(GlobalLimitMaxCount);
      }
      if (GlobalLimitCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(GlobalLimitCount);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(StartTime);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBShopItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Price != 0) {
        Price = other.Price;
      }
      if (other.PersonalLimitMaxCount != 0) {
        PersonalLimitMaxCount = other.PersonalLimitMaxCount;
      }
      if (other.PersonalLimitCount != 0) {
        PersonalLimitCount = other.PersonalLimitCount;
      }
      if (other.GlobalLimitMaxCount != 0) {
        GlobalLimitMaxCount = other.GlobalLimitMaxCount;
      }
      if (other.GlobalLimitCount != 0) {
        GlobalLimitCount = other.GlobalLimitCount;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Price = input.ReadInt32();
            break;
          }
          case 24: {
            PersonalLimitMaxCount = input.ReadSInt32();
            break;
          }
          case 32: {
            PersonalLimitCount = input.ReadSInt32();
            break;
          }
          case 40: {
            GlobalLimitMaxCount = input.ReadSInt32();
            break;
          }
          case 48: {
            GlobalLimitCount = input.ReadSInt32();
            break;
          }
          case 56: {
            StartTime = input.ReadSInt64();
            break;
          }
          case 64: {
            EndTime = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateShopListRsp : pb::IMessage<UpdateShopListRsp> {
    private static readonly pb::MessageParser<UpdateShopListRsp> _parser = new pb::MessageParser<UpdateShopListRsp>(() => new UpdateShopListRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateShopListRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateShopListRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateShopListRsp(UpdateShopListRsp other) : this() {
      result_ = other.result_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateShopListRsp Clone() {
      return new UpdateShopListRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TCCamp.PBShopItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::TCCamp.PBShopItem.Parser);
    private readonly pbc::RepeatedField<global::TCCamp.PBShopItem> items_ = new pbc::RepeatedField<global::TCCamp.PBShopItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TCCamp.PBShopItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateShopListRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateShopListRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateShopListRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoleBuyItemReq : pb::IMessage<RoleBuyItemReq> {
    private static readonly pb::MessageParser<RoleBuyItemReq> _parser = new pb::MessageParser<RoleBuyItemReq>(() => new RoleBuyItemReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleBuyItemReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleBuyItemReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleBuyItemReq(RoleBuyItemReq other) : this() {
      itemID_ = other.itemID_;
      itemCount_ = other.itemCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleBuyItemReq Clone() {
      return new RoleBuyItemReq(this);
    }

    /// <summary>Field number for the "ItemID" field.</summary>
    public const int ItemIDFieldNumber = 1;
    private int itemID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemID {
      get { return itemID_; }
      set {
        itemID_ = value;
      }
    }

    /// <summary>Field number for the "ItemCount" field.</summary>
    public const int ItemCountFieldNumber = 2;
    private int itemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemCount {
      get { return itemCount_; }
      set {
        itemCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleBuyItemReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleBuyItemReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemID != other.ItemID) return false;
      if (ItemCount != other.ItemCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemID != 0) hash ^= ItemID.GetHashCode();
      if (ItemCount != 0) hash ^= ItemCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemID);
      }
      if (ItemCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemID);
      }
      if (ItemCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleBuyItemReq other) {
      if (other == null) {
        return;
      }
      if (other.ItemID != 0) {
        ItemID = other.ItemID;
      }
      if (other.ItemCount != 0) {
        ItemCount = other.ItemCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemID = input.ReadInt32();
            break;
          }
          case 16: {
            ItemCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoleBuyItemRsp : pb::IMessage<RoleBuyItemRsp> {
    private static readonly pb::MessageParser<RoleBuyItemRsp> _parser = new pb::MessageParser<RoleBuyItemRsp>(() => new RoleBuyItemRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleBuyItemRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleBuyItemRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleBuyItemRsp(RoleBuyItemRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleBuyItemRsp Clone() {
      return new RoleBuyItemRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleBuyItemRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleBuyItemRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleBuyItemRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBRoleMoveSyncData : pb::IMessage<PBRoleMoveSyncData> {
    private static readonly pb::MessageParser<PBRoleMoveSyncData> _parser = new pb::MessageParser<PBRoleMoveSyncData>(() => new PBRoleMoveSyncData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBRoleMoveSyncData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRoleMoveSyncData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRoleMoveSyncData(PBRoleMoveSyncData other) : this() {
      roleID_ = other.roleID_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBRoleMoveSyncData Clone() {
      return new PBRoleMoveSyncData(this);
    }

    /// <summary>Field number for the "RoleID" field.</summary>
    public const int RoleIDFieldNumber = 1;
    private int roleID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleID {
      get { return roleID_; }
      set {
        roleID_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::TCCamp.PBRoleStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PBRoleStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBRoleMoveSyncData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBRoleMoveSyncData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoleID != other.RoleID) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoleID != 0) hash ^= RoleID.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoleID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoleID);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoleID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleID);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBRoleMoveSyncData other) {
      if (other == null) {
        return;
      }
      if (other.RoleID != 0) {
        RoleID = other.RoleID;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::TCCamp.PBRoleStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoleID = input.ReadInt32();
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::TCCamp.PBRoleStatus();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoleMoveSyncReq : pb::IMessage<RoleMoveSyncReq> {
    private static readonly pb::MessageParser<RoleMoveSyncReq> _parser = new pb::MessageParser<RoleMoveSyncReq>(() => new RoleMoveSyncReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleMoveSyncReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleMoveSyncReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleMoveSyncReq(RoleMoveSyncReq other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleMoveSyncReq Clone() {
      return new RoleMoveSyncReq(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::TCCamp.PBRoleMoveSyncData status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PBRoleMoveSyncData Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleMoveSyncReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleMoveSyncReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleMoveSyncReq other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::TCCamp.PBRoleMoveSyncData();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              status_ = new global::TCCamp.PBRoleMoveSyncData();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoleMoveSyncRsp : pb::IMessage<RoleMoveSyncRsp> {
    private static readonly pb::MessageParser<RoleMoveSyncRsp> _parser = new pb::MessageParser<RoleMoveSyncRsp>(() => new RoleMoveSyncRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleMoveSyncRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleMoveSyncRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleMoveSyncRsp(RoleMoveSyncRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoleMoveSyncRsp Clone() {
      return new RoleMoveSyncRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoleMoveSyncRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoleMoveSyncRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoleMoveSyncRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBScale : pb::IMessage<PBScale> {
    private static readonly pb::MessageParser<PBScale> _parser = new pb::MessageParser<PBScale>(() => new PBScale());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBScale> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBScale() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBScale(PBScale other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBScale Clone() {
      return new PBScale(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBScale);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBScale other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBScale other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CubeTransformInfo : pb::IMessage<CubeTransformInfo> {
    private static readonly pb::MessageParser<CubeTransformInfo> _parser = new pb::MessageParser<CubeTransformInfo>(() => new CubeTransformInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CubeTransformInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeTransformInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeTransformInfo(CubeTransformInfo other) : this() {
      iD_ = other.iD_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      rot_ = other.rot_ != null ? other.rot_.Clone() : null;
      scale_ = other.scale_ != null ? other.scale_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CubeTransformInfo Clone() {
      return new CubeTransformInfo(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::TCCamp.PBPosition pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PBPosition Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "Rot" field.</summary>
    public const int RotFieldNumber = 3;
    private global::TCCamp.PBRotation rot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PBRotation Rot {
      get { return rot_; }
      set {
        rot_ = value;
      }
    }

    /// <summary>Field number for the "Scale" field.</summary>
    public const int ScaleFieldNumber = 4;
    private global::TCCamp.PBScale scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PBScale Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CubeTransformInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CubeTransformInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Rot, other.Rot)) return false;
      if (!object.Equals(Scale, other.Scale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (rot_ != null) hash ^= Rot.GetHashCode();
      if (scale_ != null) hash ^= Scale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (rot_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rot);
      }
      if (scale_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (rot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rot);
      }
      if (scale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CubeTransformInfo other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          pos_ = new global::TCCamp.PBPosition();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.rot_ != null) {
        if (rot_ == null) {
          rot_ = new global::TCCamp.PBRotation();
        }
        Rot.MergeFrom(other.Rot);
      }
      if (other.scale_ != null) {
        if (scale_ == null) {
          scale_ = new global::TCCamp.PBScale();
        }
        Scale.MergeFrom(other.Scale);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              pos_ = new global::TCCamp.PBPosition();
            }
            input.ReadMessage(pos_);
            break;
          }
          case 26: {
            if (rot_ == null) {
              rot_ = new global::TCCamp.PBRotation();
            }
            input.ReadMessage(rot_);
            break;
          }
          case 34: {
            if (scale_ == null) {
              scale_ = new global::TCCamp.PBScale();
            }
            input.ReadMessage(scale_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 进入场景
  /// </summary>
  public sealed partial class EnterSceneReq : pb::IMessage<EnterSceneReq> {
    private static readonly pb::MessageParser<EnterSceneReq> _parser = new pb::MessageParser<EnterSceneReq>(() => new EnterSceneReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterSceneReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterSceneReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterSceneReq(EnterSceneReq other) : this() {
      sceneID_ = other.sceneID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterSceneReq Clone() {
      return new EnterSceneReq(this);
    }

    /// <summary>Field number for the "SceneID" field.</summary>
    public const int SceneIDFieldNumber = 1;
    private int sceneID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneID {
      get { return sceneID_; }
      set {
        sceneID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterSceneReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterSceneReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneID != other.SceneID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneID != 0) hash ^= SceneID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SceneID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SceneID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterSceneReq other) {
      if (other == null) {
        return;
      }
      if (other.SceneID != 0) {
        SceneID = other.SceneID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SceneID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///玩家上线回应
  /// </summary>
  public sealed partial class EnterSceneRsp : pb::IMessage<EnterSceneRsp> {
    private static readonly pb::MessageParser<EnterSceneRsp> _parser = new pb::MessageParser<EnterSceneRsp>(() => new EnterSceneRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterSceneRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterSceneRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterSceneRsp(EnterSceneRsp other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterSceneRsp Clone() {
      return new EnterSceneRsp(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::TCCamp.PB_RESULT_CODE result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TCCamp.PB_RESULT_CODE Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterSceneRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterSceneRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterSceneRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::TCCamp.PB_RESULT_CODE) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExitSceneAnnounce : pb::IMessage<ExitSceneAnnounce> {
    private static readonly pb::MessageParser<ExitSceneAnnounce> _parser = new pb::MessageParser<ExitSceneAnnounce>(() => new ExitSceneAnnounce());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExitSceneAnnounce> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitSceneAnnounce() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitSceneAnnounce(ExitSceneAnnounce other) : this() {
      roleIds_ = other.roleIds_.Clone();
      cubeIds_ = other.cubeIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitSceneAnnounce Clone() {
      return new ExitSceneAnnounce(this);
    }

    /// <summary>Field number for the "RoleIds" field.</summary>
    public const int RoleIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_roleIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> roleIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RoleIds {
      get { return roleIds_; }
    }

    /// <summary>Field number for the "CubeIds" field.</summary>
    public const int CubeIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_cubeIds_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> cubeIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CubeIds {
      get { return cubeIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExitSceneAnnounce);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExitSceneAnnounce other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roleIds_.Equals(other.roleIds_)) return false;
      if(!cubeIds_.Equals(other.cubeIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roleIds_.GetHashCode();
      hash ^= cubeIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      roleIds_.WriteTo(output, _repeated_roleIds_codec);
      cubeIds_.WriteTo(output, _repeated_cubeIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roleIds_.CalculateSize(_repeated_roleIds_codec);
      size += cubeIds_.CalculateSize(_repeated_cubeIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExitSceneAnnounce other) {
      if (other == null) {
        return;
      }
      roleIds_.Add(other.roleIds_);
      cubeIds_.Add(other.cubeIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            roleIds_.AddEntriesFrom(input, _repeated_roleIds_codec);
            break;
          }
          case 18:
          case 16: {
            cubeIds_.AddEntriesFrom(input, _repeated_cubeIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SceneSyncAnnounce : pb::IMessage<SceneSyncAnnounce> {
    private static readonly pb::MessageParser<SceneSyncAnnounce> _parser = new pb::MessageParser<SceneSyncAnnounce>(() => new SceneSyncAnnounce());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SceneSyncAnnounce> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TCCamp.PlayerReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneSyncAnnounce() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneSyncAnnounce(SceneSyncAnnounce other) : this() {
      datas_ = other.datas_.Clone();
      cubeInfos_ = other.cubeInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneSyncAnnounce Clone() {
      return new SceneSyncAnnounce(this);
    }

    /// <summary>Field number for the "Datas" field.</summary>
    public const int DatasFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TCCamp.PBRoleMoveSyncData> _repeated_datas_codec
        = pb::FieldCodec.ForMessage(10, global::TCCamp.PBRoleMoveSyncData.Parser);
    private readonly pbc::RepeatedField<global::TCCamp.PBRoleMoveSyncData> datas_ = new pbc::RepeatedField<global::TCCamp.PBRoleMoveSyncData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TCCamp.PBRoleMoveSyncData> Datas {
      get { return datas_; }
    }

    /// <summary>Field number for the "cubeInfos" field.</summary>
    public const int CubeInfosFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TCCamp.CubeTransformInfo> _repeated_cubeInfos_codec
        = pb::FieldCodec.ForMessage(18, global::TCCamp.CubeTransformInfo.Parser);
    private readonly pbc::RepeatedField<global::TCCamp.CubeTransformInfo> cubeInfos_ = new pbc::RepeatedField<global::TCCamp.CubeTransformInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TCCamp.CubeTransformInfo> CubeInfos {
      get { return cubeInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SceneSyncAnnounce);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SceneSyncAnnounce other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!datas_.Equals(other.datas_)) return false;
      if(!cubeInfos_.Equals(other.cubeInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= datas_.GetHashCode();
      hash ^= cubeInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      datas_.WriteTo(output, _repeated_datas_codec);
      cubeInfos_.WriteTo(output, _repeated_cubeInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += datas_.CalculateSize(_repeated_datas_codec);
      size += cubeInfos_.CalculateSize(_repeated_cubeInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SceneSyncAnnounce other) {
      if (other == null) {
        return;
      }
      datas_.Add(other.datas_);
      cubeInfos_.Add(other.cubeInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            datas_.AddEntriesFrom(input, _repeated_datas_codec);
            break;
          }
          case 18: {
            cubeInfos_.AddEntriesFrom(input, _repeated_cubeInfos_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
